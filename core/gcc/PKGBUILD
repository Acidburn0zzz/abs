# $Id$
# Maintainer: Allan McRae <allan@archlinux.org>

# toolchain build order: linux-api-headers->glibc->binutils->gcc->binutils->glibc
# NOTE: libtool requires rebuilt with each new gcc version

pkgname=('gcc' 'gcc-libs' 'gcc-fortran' 'gcc-objc')
[[ $CARCH == x86_64 ]] && pkgname+=('lib32-gcc-libs')
pkgver=4.9.1
_pkgver=4.9
pkgrel=5
#_snapshot=4.8-20140206
pkgdesc="The GNU Compiler Collection"
arch=('i686' 'amd64')
license=('GPL' 'LGPL' 'FDL' 'custom')
url="http://gcc.gnu.org"
makedepends=('libmpc' 'cloog')
options=('!libtool' '!emptydirs' 'clang')
source=(ftp://gcc.gnu.org/pub/gcc/releases/gcc-${pkgver}/gcc-${pkgver}.tar.bz2
        #ftp://gcc.gnu.org/pub/gcc/snapshots/${_snapshot}/gcc-${_snapshot}.tar.bz2
        gcc-4.8-filename-output.patch
        freebsd-multilib-config.diff)

if [ -n "${_snapshot}" ]; then
  _basedir="gcc-${_snapshot}"
else
  _basedir="gcc-${pkgver}"
fi

if [[ "$CARCH" == "i686" ]]; then
    _CARCH=i386
else
    _CARCH=x86_64
    makedepends+=('freebsd-lib32')
fi
### NOTE: IMPORTANT!
### NOTE: This _CHOST_ must also be used in the freebsd-multilib-config.diff!
_CHOST_=${_CARCH}-unknown-freebsd10.0
_libdir="usr/lib/gcc/$_CHOST_/$pkgver"

prepare() {
  cd "${srcdir}/${_basedir}"

  echo ${pkgver} > gcc/BASE-VER

  # hack! - some configure tests for header files using "$CPP $CPPFLAGS"
  gsed -i "/ac_cpp=/s/\$CPPFLAGS/\$CPPFLAGS -O2/" {libiberty,gcc}/configure

  # http://gcc.gnu.org/bugzilla/show_bug.cgi?id=57653
  patch -p0 -i ${srcdir}/gcc-4.8-filename-output.patch

  if [[ "$CARCH" == x86_64 ]]; then
    patch -p0 -i ${srcdir}/freebsd-multilib-config.diff
  fi

  mkdir ${srcdir}/gcc-build
}

build() {
  cd "${srcdir}/${_basedir}"

  # Do not install libiberty
  gsed -i 's/install_to_$(INSTALL_DEST) //' libiberty/Makefile.in

  # using -pipe causes spurious test-suite failures
  # http://gcc.gnu.org/bugzilla/show_bug.cgi?id=48565
  CFLAGS=${CFLAGS/-pipe/}
  CXXFLAGS=${CXXFLAGS/-pipe/}

  contrib/gcc_update --touch
  rm -rf -f gcc/*/*.info*

  cd "${srcdir}/gcc-build"

  ../${_basedir}/configure --prefix=/usr \
      --libdir=/usr/lib \
      --mandir=/usr/share/man --infodir=/usr/share/info \
      --with-bugurl=https://bugs.archbsd.org/ \
      --enable-languages=c,c++,objc,fortran \
      --disable-nls --with-as=/usr/bin/as \
      --with-gmp=/usr --with-ld=/usr/bin/ld \
      --with-libiconv-prefix=/usr \
      --with-pkgversion="ArchBSD Package Collection" \
      --with-system-zlib --disable-libgcj \
      --enable-cloog-backend=isl --disable-cloog-version-check \
      --enable-multilib --libexecdir=/usr/lib

  gmake
}

check() {
  cd "${srcdir}/gcc-build"

  # increase stack size to prevent test failures
  # http://gcc.gnu.org/bugzilla/show_bug.cgi?id=31827
  ulimit -s 32768

  # do not abort on error as some are "expected"
  gmake -k check || true
  "${srcdir}/${_basedir}/contrib/test_summary"
}

package_gcc-libs()
{
  pkgdesc="Runtime libraries shipped by GCC"
  # fuck its install script
  depends=()
  groups=('base')
  options=('!emptydirs')

  cd "${srcdir}/gcc-build"
  gmake -C $_CHOST_/libgcc DESTDIR=${pkgdir} install-shared
  rm ${pkgdir}/${_libdir}/libgcc_eh.a
  
  for lib in libatomic \
             libcilkrts \
             libgfortran \
             libgomp \
             libitm \
             libquadmath \
             libstdc++-v3/src; do
    gmake -C $_CHOST_/$lib DESTDIR=${pkgdir} install-toolexeclibLTLIBRARIES
  done

  gmake -C $_CHOST_/libobjc DESTDIR=${pkgdir} install-libs
  
  gmake -C $_CHOST_/libstdc++-v3/po DESTDIR=${pkgdir} install

  for lib in libgomp \
             libitm \
             libquadmath; do
    gmake -C $_CHOST_/$lib DESTDIR=${pkgdir} install-info
  done

  # remove stuff in lib32-gcc-libs
  if [[ "$CARCH" == x86_64 ]]; then
    rm -r ${pkgdir}/usr/lib32
  fi

  # Install Runtime Library Exception
  install -dm755 ${pkgdir}/usr/share/licenses/gcc-libs/
  install -m644 ${srcdir}/${_basedir}/COPYING.RUNTIME ${pkgdir}/usr/share/licenses/gcc-libs/
}

package_lib32-gcc-libs()
{
  pkgdesc="Runtime libraries shipped by GCC (32-bit)"
  depends=("gcc-libs=${pkgver}" 'freebsd-world>=1:10.1' 'freebsd-lib32>=1:10.1')
  options=('!emptydirs')
  provides=("lib32-devel=${pkgver}-${pkgrel}")
  replaces=("lib32-devel")
  conflicts=("lib32-devel")

  cd ${srcdir}/gcc-build

  gmake -C $_CHOST_/32/libgcc DESTDIR=${pkgdir} install-shared
  rm ${pkgdir}/${_libdir}/32/libgcc_eh.a

  for lib in libatomic \
             libcilkrts \
             libgomp \
             libitm \
             libquadmath \
             libstdc++-v3/src; do
    gmake -C $_CHOST_/32/$lib DESTDIR=${pkgdir} install-toolexeclibLTLIBRARIES
  done

  gmake -C $_CHOST_/32/libobjc DESTDIR=${pkgdir} install-libs

  # remove stuff in gcc-libs-multilib
  rm -r ${pkgdir}/usr/lib

  # Install Runtime Library Exception
  install -dm755 ${pkgdir}/usr/share/licenses/lib32-gcc-libs
  install -m644 ${srcdir}/${_basedir}/COPYING.RUNTIME \
    ${pkgdir}/usr/share/licenses/lib32-gcc-libs/RUNTIME.LIBRARY.EXCEPTION
}

package_gcc()
{
  pkgdesc="The GNU Compiler Collection - C and C++ frontends"
  depends=("gcc-libs=$pkgver-$pkgrel" 'libmpc' 'cloog')
  options=('staticlibs')
  install=gcc.install
  cd "${srcdir}/gcc-build"
  
  gmake -C gcc DESTDIR=${pkgdir} install-driver install-cpp install-gcc-ar \
    c++.install-common install-headers install-plugin install-lto-wrapper

  install -m755 gcc/gcov $pkgdir/usr/bin/
  install -m755 gcc/{cc1,cc1plus,collect2,lto1} $pkgdir/${_libdir}/

  gmake -C $_CHOST_/libgcc DESTDIR=${pkgdir} install
  rm ${pkgdir}/usr/lib/libgcc_s.so*
  
  gmake -C $_CHOST_/libstdc++-v3/src DESTDIR=${pkgdir} install
  gmake -C $_CHOST_/libstdc++-v3/include DESTDIR=${pkgdir} install
  gmake -C $_CHOST_/libstdc++-v3/libsupc++ DESTDIR=${pkgdir} install
  gmake -C $_CHOST_/libstdc++-v3/python DESTDIR=${pkgdir} install

  install -d $pkgdir/usr/share/gdb/auto-load/usr/lib
  mv $pkgdir/usr/lib/libstdc++.so.6*-gdb.py \
    $pkgdir/usr/share/gdb/auto-load/usr/lib/
  rm ${pkgdir}/usr/lib/libstdc++.{so,a,la}*

  gmake DESTDIR=${pkgdir} install-fixincludes
  gmake -C gcc DESTDIR=${pkgdir} install-mkheaders
  gmake -C lto-plugin DESTDIR=${pkgdir} install

  gmake -C $_CHOST_/libcilkrts DESTDIR=${pkgdir} install-nodist_toolexeclibHEADERS \
    install-nodist_cilkincludeHEADERS
  gmake -C $_CHOST_/libgomp DESTDIR=${pkgdir} install-nodist_toolexeclibHEADERS \
    install-nodist_libsubincludeHEADERS
  gmake -C $_CHOST_/libitm DESTDIR=${pkgdir} install-nodist_toolexeclibHEADERS
  gmake -C $_CHOST_/libquadmath DESTDIR=${pkgdir} install-nodist_libsubincludeHEADERS
  #gmake -C $_CHOST_/libsanitizer DESTDIR=${pkgdir} install-nodist_toolexeclibHEADERS
  #gmake -C $_CHOST_/libsanitizer/asan DESTDIR=${pkgdir} install-nodist_toolexeclibHEADERS

  gmake -C libiberty DESTDIR=${pkgdir} install

  gmake -C gcc DESTDIR=${pkgdir} install-man install-info
  rm ${pkgdir}/usr/share/man/man1/gfortran.1
  rm ${pkgdir}/usr/share/info/gfortran.info

  gmake -C libcpp DESTDIR=${pkgdir} install
  gmake -C gcc DESTDIR=${pkgdir} install-po

  # install the libstdc++ man pages
  #gmake -C $_CHOST_/libstdc++-v3/doc DESTDIR=$pkgdir doc-install-man

  mv ${pkgdir}/usr/bin/c++ ${pkgdir}/usr/bin/gcc-c++
  mv ${pkgdir}/usr/bin/cpp ${pkgdir}/usr/bin/gcc-cpp

  # remove stuff in lib32-gcc-libs
  if [[ "$CARCH" == x86_64 ]]; then
    rm -r ${pkgdir}/usr/lib32
  fi

  # Install Runtime Library Exception
  install -d ${pkgdir}/usr/share/licenses/gcc/
  ln -s ../gcc-libs/RUNTIME.LIBRARY.EXCEPTION ${pkgdir}/usr/share/licenses/gcc/

}

package_gcc-fortran()
{
  pkgdesc="Fortran front-end for GCC"
  depends=("gcc=$pkgver-$pkgrel")
  options=('staticlibs')
  install=gcc-fortran.install

  cd ${srcdir}/gcc-build
  gmake -C $_CHOST_/libgfortran DESTDIR=$pkgdir install-{{caf,my}execlibLTLIBRARIES,toolexeclibDATA}
  gmake -C $_CHOST_/libgomp DESTDIR=$pkgdir install-nodist_fincludeHEADERS
  gmake -C gcc DESTDIR=$pkgdir fortran.install-{common,man,info}
  install -dm755 $pkgdir/${_libdir}
  install -m755 gcc/f951 $pkgdir/${_libdir}/f951

  ln -s gfortran ${pkgdir}/usr/bin/f95

  # Install Runtime Library Exception
  install -d ${pkgdir}/usr/share/licenses/gcc-fortran/
  ln -s ../gcc-libs/RUNTIME.LIBRARY.EXCEPTION ${pkgdir}/usr/share/licenses/gcc-fortran/
}

package_gcc-objc()
{
  pkgdesc="Objective-C front-end for GCC"
  depends=("gcc=$pkgver-$pkgrel")

  cd ${srcdir}/gcc-build
  gmake DESTDIR=$pkgdir -C $_CHOST_/libobjc install-headers
  install -dm755 $pkgdir/${_libdir}
  install -m755 gcc/cc1obj $pkgdir/${_libdir}/

  # Install Runtime Library Exception
  install -d ${pkgdir}/usr/share/licenses/gcc-objc/
  ln -s ../gcc-libs/RUNTIME.LIBRARY.EXCEPTION ${pkgdir}/usr/share/licenses/gcc-objc/
}
md5sums=('fddf71348546af523353bd43d34919c1'
         '40cb437805e2f7a006aa0d0c3098ab0f'
         '9e52559a17ac8de82f405e65b6c12124')

