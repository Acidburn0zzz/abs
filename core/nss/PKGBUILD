pkgname=nss
pkgver=3.23
pkgrel=1
pkgdesc="Mozilla Network Security Services"
arch=(i386 amd64)
url="http://www.mozilla.org/projects/security/pki/nss/"
license=('MPL' 'GPL')
_nsprver=4.12
depends=("nspr>=${_nsprver}" 'sqlite' 'zlib' 'sh')
makedepends=('perl' 'python2' 'binutils')
options=('!strip' '!makeflags' 'staticlibs')
patchdir=("nss-$pkgver/nss")
source=("https://ftp.mozilla.org/pub/mozilla.org/security/nss/releases/NSS_${pkgver//./_}_RTM/src/${pkgname}-${pkgver}.tar.gz"
        certdata2pem.py bundle.sh nss.pc.in nss-config.in legacy-certs.patch)
sha256sums=('94b383e31c9671e9dfcca81084a8a813817e8f05a57f54533509b318d26e11cf'
            'af13c30801a8a27623948206458432a4cf98061b75ff6e5b5e03912f93c034ee'
            '045f520403f715a4cc7f3607b4e2c9bcc88fee5bce58d462fddaa2fdb0e4c180'
            'b9f1428ca2305bf30b109507ff335fa00bce5a7ce0434b50acd26ad7c47dd5bd'
            'e44ac5095b4d88f24ec7b2e6a9f1581560bd3ad41a3d198596d67ef22f67adb9'
            'e5531e1620317b73a84e6526b9348c9bf93ec51c336ea4644fdf94ab60e76bc7')

prepare() {
  unset LDFLAGS
  mkdir certs

  cd nss-$pkgver
  cp nss/lib/ckfw/builtins/certdata.txt ../certs/
  cp nss/lib/ckfw/builtins/nssckbi.h ../certs/

  rm -rf */lib/zlib */lib/dbm */lib/sqlite

}


build() {
  cd certs
  python2 ../certdata2pem.py

  cd ..
  sh bundle.sh

  cd nss-$pkgver/nss
  export BUILD_OPT=1
  export FREEBL_LOWHASH=0
  export NSS_DISABLE_GTESTS=1
  export NSS_USE_SYSTEM_SQLITE=1
  export NSPR_INCLUDE_DIR="`nspr-config --includedir`"
  export NSPR_LIB_DIR="`nspr-config --libdir`"
  export LDFLAGS+=" -L/lib -L/usr/lib"
  export XCFLAGS="${CFLAGS} -B/usr/local/bin"

  [ "$CARCH" = "amd64" ] && export USE_64=1

  gmake -C coreconf
  gmake
}

package() {
  install=nss.install

  cd nss-$pkgver
  install -d "$pkgdir"/usr/{bin,include/nss,libdata/pkgconfig,lib}

  NSS_VMAJOR=$(grep '#define.*NSS_VMAJOR' nss/lib/nss/nss.h | awk '{print $3}')
  NSS_VMINOR=$(grep '#define.*NSS_VMINOR' nss/lib/nss/nss.h | awk '{print $3}')
  NSS_VPATCH=$(grep '#define.*NSS_VPATCH' nss/lib/nss/nss.h | awk '{print $3}')
  BINS="${srcdir}/nss-$pkgver/dist/*_OPT.OBJ/"

  gsed ../nss.pc.in \
    -e "s,%libdir%,/usr/lib,g" \
    -e "s,%prefix%,/usr,g" \
    -e "s,%exec_prefix%,/usr/bin,g" \
    -e "s,%includedir%,/usr/include/nss,g" \
    -e "s,%NSPR_VERSION%,${_nsprver},g" \
    -e "s,%NSS_VERSION%,${pkgver},g" \
    > "$pkgdir/usr/libdata/pkgconfig/nss.pc"
  ln -s nss.pc "$pkgdir/usr/libdata/pkgconfig/mozilla-nss.pc"

  gsed ../nss-config.in \
    -e "s,@libdir@,/usr/lib,g" \
    -e "s,@prefix@,/usr/bin,g" \
    -e "s,@exec_prefix@,/usr/bin,g" \
    -e "s,@includedir@,/usr/include/nss,g" \
    -e "s,@MOD_MAJOR_VERSION@,${NSS_VMAJOR},g" \
    -e "s,@MOD_MINOR_VERSION@,${NSS_VMINOR},g" \
    -e "s,@MOD_PATCH_VERSION@,${NSS_VPATCH},g" \
    > "$pkgdir/usr/bin/nss-config"
  chmod 755 "$pkgdir/usr/bin/nss-config"


  find ${srcdir}/nss-${pkgver}/dist/public/nss -type l \
    -exec ${BSD_INSTALL_DATA} {} ${pkgdir}/usr/include/nss/ \;
  ${BSD_INSTALL_LIB} ${BINS}/lib/*.so.1 \
    ${pkgdir}/usr/lib/
  ${BSD_INSTALL_DATA} ${BINS}/lib/libcrmf.a \
    ${pkgdir}/usr/lib/

  cd ${BINS}/lib && \
    tar -cf - *.so | tar --unlink -C ${pkgdir}/usr/lib -xf -


}
