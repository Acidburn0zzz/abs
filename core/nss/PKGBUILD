# Port: security/nss

pkgname=nss
pkgver=3.30.2
pkgrel=1
pkgdesc="Mozilla Network Security Services"
arch=(i386 amd64)
url="http://www.mozilla.org/projects/security/pki/nss/"
license=('MPL' 'GPL')
_nsprver=4.12
depends=("nspr>=${_nsprver}" 'sqlite' 'zlib' 'sh' 'p11-kit')
makedepends=('perl' 'python2' 'binutils' 'docbook-xsl' 'xmlto')
options=('!strip' '!makeflags' 'staticlibs')
patchdir=("nss-$pkgver/nss")
source=("https://ftp.mozilla.org/pub/mozilla.org/security/nss/releases/NSS_${pkgver//./_}_RTM/src/${pkgname}-${pkgver}.tar.gz"
        certdata2pem.py bundle.sh nss.pc.in nss-config.in nss-config.xml)
sha256sums=('0d4a77ff26bcee79fa8afe0125e0df6ae9e798b6b36782fa29e28febf7cfce24'
            '512b12a2f13129be62c008b4df0153f527dd7d71c2c5183de99dfa2a1c49dd8a'
            '3bfadf722da6773bdabdd25bdf78158648043d1b7e57615574f189a88ca865dd'
            'f2208c4f70373ff9b60f53d733f8071d4e390c384b776dfc04bf26c306882faf'
            'e44ac5095b4d88f24ec7b2e6a9f1581560bd3ad41a3d198596d67ef22f67adb9'
            '98ace873c63e8e870286bce3ed53249aa2655cc1f53e7049061476e650ab06f1')

prepare() {
  # unset LDFLAGS
  mkdir certs

  echo -n "$(date +"%e %B %Y")" >date.xml
  echo -n "$pkgver" >version.xml

  cd nss-$pkgver

  # Respect LDFLAGS
  gsed -e 's/\$(MKSHLIB) -o/\$(MKSHLIB) \$(LDFLAGS) -o/' \
      -i nss/coreconf/rules.mk

  cp nss/lib/ckfw/builtins/certdata.txt ../certs/
  cp nss/lib/ckfw/builtins/nssckbi.h ../certs/

  # rm -rf */lib/zlib */lib/dbm */lib/sqlite
}


build() {
  xmlto man nss-config.xml

  cd certs
  python2 ../certdata2pem.py

  cd ..
  sh bundle.sh

  cd nss-$pkgver/nss
  export BUILD_OPT=1
  export FREEBL_LOWHASH=1
  export NSS_DISABLE_GTESTS=1
  export NSS_USE_SYSTEM_SQLITE=1
  export NSS_ALLOW_SSLKEYLOGFILE=1
  export NSS_ENABLE_ECC=1
  export NSPR_INCLUDE_DIR="`nspr-config --includedir`"
  export NSPR_LIB_DIR="`nspr-config --libdir`"
  export LDFLAGS+=" -L/lib -L/usr/lib"
  export XCFLAGS="${CFLAGS} -B/usr/local/bin"

  [ "$CARCH" = "amd64" ] && export USE_64=1

  gmake -C coreconf
  gmake -C lib/dbm
  gmake
  gmake clean_docs build_docs
}

package() {
  install=nss.install

  cd nss-$pkgver
  install -d "$pkgdir"/usr/{bin,lib,include/nss,libdata/pkgconfig,share/man/man1}

  NSS_VMAJOR=$(grep '#define.*NSS_VMAJOR' nss/lib/nss/nss.h | awk '{print $3}')
  NSS_VMINOR=$(grep '#define.*NSS_VMINOR' nss/lib/nss/nss.h | awk '{print $3}')
  NSS_VPATCH=$(grep '#define.*NSS_VPATCH' nss/lib/nss/nss.h | awk '{print $3}')
  [ "$CARCH" = "amd64" ] && BINS="${srcdir}/nss-$pkgver/dist/FreeBSD11.0_64_OPT.OBJ"

  gsed ../nss.pc.in \
    -e "s,%libdir%,/usr/lib,g" \
    -e "s,%prefix%,/usr,g" \
    -e "s,%exec_prefix%,/usr/bin,g" \
    -e "s,%includedir%,/usr/include/nss,g" \
    -e "s,%NSPR_VERSION%,${_nsprver},g" \
    -e "s,%NSS_VERSION%,${pkgver},g" \
    > "$pkgdir/usr/libdata/pkgconfig/nss.pc"
  ln -s nss.pc "$pkgdir/usr/libdata/pkgconfig/mozilla-nss.pc"

  gsed ../nss-config.in \
    -e "s,@libdir@,/usr/lib,g" \
    -e "s,@prefix@,/usr/bin,g" \
    -e "s,@exec_prefix@,/usr/bin,g" \
    -e "s,@includedir@,/usr/include/nss,g" \
    -e "s,@MOD_MAJOR_VERSION@,${NSS_VMAJOR},g" \
    -e "s,@MOD_MINOR_VERSION@,${NSS_VMINOR},g" \
    -e "s,@MOD_PATCH_VERSION@,${NSS_VPATCH},g" \
    > "$pkgdir/usr/bin/nss-config"
  chmod 755 "$pkgdir/usr/bin/nss-config"

  find ${srcdir}/nss-${pkgver}/dist/public/nss -type l \
    -exec ${BSD_INSTALL_DATA} {} ${pkgdir}/usr/include/nss/nss \;
  ${BSD_INSTALL_LIB} ${BINS}/lib/*.so \
    ${pkgdir}/usr/lib/
  ${BSD_INSTALL_DATA} ${BINS}/lib/libcrmf.a \
    ${pkgdir}/usr/lib/

  # cd ${BINS}/lib && \
    # tar -cf - *.so | tar --unlink -C ${pkgdir}/usr/lib -xf -

  install -m644 "nss/doc/nroff/"*.1 "../nss-config.1" \
    "${pkgdir}/usr/share/man/man1"

  cd dist
  install -m644 public/nss/*.h "${pkgdir}/usr/include/nss"

  cd *.OBJ/bin
  install {*util,derdump,pp,shlibsign,signtool,signver,ssltap,vfychain,vfyserv} \
    "${pkgdir}/usr/bin"

  cd ../lib
  install *.so "${pkgdir}/usr/lib"
  install *.chk libcrmf.a "${pkgdir}/usr/lib"

  rm "$pkgdir/usr/lib/libnssckbi.so"
  ln -s libnssckbi-p11-kit.so "$pkgdir/usr/lib/libnssckbi.so"
}
