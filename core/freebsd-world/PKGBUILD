#
# This PKGBUILD requires root at the package stage. Building works as user, afterwards
# use makepkg -R --asroot
#
pkgname=('freebsd-world' 'freebsd-kernel' 'freebsd-source' 'freebsd-init')
if [[ "$CARCH" == "amd64" ]]; then
  pkgname=(${pkgname[@]} 'freebsd-lib32')
fi

_freebsdver=10.3
_libarchivever=3.1.2

#_git_commit_rev="ee786e4"
#_git_branch="releng/10.1"
#_git_desc="(from git: ${_git_commit_rev})"

pkgver=10.3
pkgrel=4

arch=('i386' 'amd64')
url="https://www.freebsd.org"
license=('BSD')
options=('!strip' 'emptydirs' '!fbsd10fix' 'staticlibs')
makedepends=('git')
patchdir="${srcdir}/usr/src"
## The commit should currently come from the stable/10 branch
source=("ftp://ftp.freebsd.org/pub/FreeBSD/releases/amd64/amd64/${_freebsdver}-RELEASE/src.txz"
        'ARCHBSD_i686'
        'ARCHBSD_x86_64'
        'libcrypto.pc.in'
        'libarchive.pc'
        'openssl.pc.in'
	'tmpfiles.in')
sha1sums=('39c368baa21957d6edd10eb66e6dbf9c6cff1ccf'
          '7a99ba157ffa4915fb453cc3e9d8d7c798a5e236'
          'e364638ad28c44cab67e5575d3afbdd8ef8ddccc'
          '8b1142f057ef8ba1404bc441ac2d7a0dc875af3a'
          'b394ece3b916003fa849601484cea2f724301baa'
          '79c202df6e247ba09ce5196eabd879feac4ec121'
          '09991a81b9f1fccc783d9395e5e3b78e8dd17603')

prepare() {
  cd "${srcdir}/usr/src"

  #Remove the horrible dir string in uname
  sed -i '' -e 's/:\${d}//g' "${srcdir}/usr/src/sys/conf/newvers.sh"

  #Remove debug options from generic
  sed -i '' -e '/DEBUG=/d' "${srcdir}/usr/src/sys/amd64/conf/GENERIC"

  cd "${srcdir}"
  msg "Fetching version info for .pc files"
  local openssl_version=$(grep -m1 '^VERSION=' usr/src/crypto/openssl/Makefile \
                          | sed -e 's/^VERSION=[[:space:]]*//')
  msg "openssl: ${openssl_version}"
  sed -e "s|%%VERSION%%|${openssl_version}|g" openssl.pc.in > openssl.pc

  # libcrypto and openssl share their version
  msg "libcrypto: ${openssl_version}"
  sed -e "s|%%VERSION%%|${openssl_version}|g" libcrypto.pc.in > libcrypto.pc

  # libarchive only has it in a #define, I wonder if it'll stay that way
  # in the sources
}

flags_for_all() {
  cd "$srcdir"

  export MAKEOBJDIRPREFIX="$srcdir/obj"
  unset LDFLAGS CXXFLAGS CPPFLAGS CFLAGS M4 LD RANLIB ld
  if [[ "$CARCH" == "amd64" ]]; then
    export TARGET=amd64
    export KERNCONF=ARCHBSD_x86_64
    export CFLAGS="-march=x86-64 -mtune=generic -O2"
  else
    export TARGET=i386
    export KERNCONF=ARCHBSD_i686
    export CFLAGS="-march=i686 -mtune=generic -O2"
  fi

  # building the default parameters here:
  bsdmakeflags=(
    KERNCONF="${KERNCONF}"
    NO_FSCHG=1
  )
}

_build() {

  cd "${srcdir}/usr/src"
  msg "Linking kernel config"
  ln -sf "${srcdir}/$KERNCONF" "${srcdir}/usr/src/sys/${TARGET}/conf/$KERNCONF"

  msg "Building Kernel toolchain"
  make WERROR= NO_WERROR= "${bsdmakeflags[@]}" kernel-toolchain || (echo kernel-toolchain failed... && return 1)

  msg "Building Kernel"
  make WERROR= NO_WERROR= "${bsdmakeflags[@]}" buildkernel || (echo buildkernel failed... && return 1)

  msg "Building world"
  make WERROR= NO_WERROR= "${bsdmakeflags[@]}" buildworld || (echo buildworld failed... && return 1)

}

_package_freebsd-kernel() {
  pkgdesc="FreeBSD kernel package ${_git_desc}"
  groups=('base')
  options=('!strip')

  cd "${srcdir}/usr/src"

  make -j1 "${bsdmakeflags[@]}" DESTDIR="${pkgdir}" installkernel || (echo installkernel failed... && return 1)
}

_package_freebsd-world() {
  pkgdesc="FreeBSD base package ${_git_desc}"
  groups=('base')
  depends=('init' 'freebsd-kernel')
  conflicts=(libexecinfo libarchive)
  provides=(libc=${_freebsdver} zlib=${_freebsdver} libexecinfo libarchive=${_libarchivever} sh)

  cd "${srcdir}/usr/src"

  msg "Running make installworld distribution..."
  make -j1 "${bsdmakeflags[@]}" DESTDIR="$pkgdir" -DWITHOUT_LIB32 installworld distribution

  msg "Installed. Cleaning up and configuring..."

  #remove rc tools for openrc
  rm -r ${pkgdir}/etc/rc.d*

  rm ${pkgdir}/etc/{rc,rc.shutdown} \
     ${pkgdir}/usr/share/man/man8/rc.8.gz

  #remove rc.conf in defaults provided by FreeBSD-Configs
  rm "${pkgdir}"/etc/defaults/rc.conf \
     "${pkgdir}"/etc/rc.subr

  #Remove freebsd-update
  rm "${pkgdir}"/usr/sbin/freebsd-update \
     "${pkgdir}"/usr/share/man/man1/cpp.1.gz

  #Remove files now provided by FreeBSD-config
  rm "${pkgdir}"/etc/freebsd-update.conf \
     "${pkgdir}"/etc/netstart \
     "${pkgdir}"/etc/devd/asus.conf \
     "${pkgdir}"/boot/beastie.4th \
     "${pkgdir}"/boot/brand.4th \
     "${pkgdir}"/etc/csh.cshrc \
     "${pkgdir}"/etc/devd.conf \
     "${pkgdir}"/etc/devfs.conf \
     "${pkgdir}"/etc/motd \
     "${pkgdir}"/etc/profile \
     "${pkgdir}"/etc/sysctl.conf \
     "${pkgdir}"/etc/devd/uath.conf \
     "${pkgdir}"/etc/devd/usb.conf

  #set var/cache to 755
  chmod -Rv 755 "${pkgdir}"/var/cache
  # FIXME: /var/db/entropy seems to have changed from 700 to 755
  # if keeping it 700 doesn't break anything, fix it up to 700 again!
  chmod -Rv 700 "${pkgdir}"/var/db/entropy

  cd "$pkgdir"

  backup=('boot/device.hints')
  for f in `find -E etc -type f ! -regex ".*periodic.*|.*mtree.*|.*defaults.*|.*README|.*Makefile"` `find root var -type f`; do
    backup+=("${f}")
  done

  if [[ "$CARCH" == "amd64" ]]; then
    msg "Fixing up 32/64 bit include files"
    # Move machine headers to a 64/ directory and create wrappers
    mv "$pkgdir"/usr/include/machine "$srcdir"/machine64
    install -o root -g wheel -dm755 "$pkgdir"/usr/include/machine
    mv "$srcdir"/machine64 "$pkgdir"/usr/include/machine/64
    # Install 32 bit machine headers to /usr/include/machine/32
    cp -R "$srcdir"/usr/src/sys/i386/include "$pkgdir"/usr/include/machine/32
    cd "$pkgdir"/usr/include/machine
    install -o root -g wheel -dm755 pc
    for i in 64/pc/*; do
      b=${i#64/pc/}
      cat > "pc/$b" <<EOF
#if __x86_64
#  include <machine/64/pc/$b>
#else
#  include <machine/32/pc/$b>
#endif
EOF
    done

    for i in 64/*; do
      b=${i#64/}
      if [ "$b" = "pc" ]; then continue; fi
      if [ -e "32/$b" ]; then
        cat > "$b" <<EOF
#if __x86_64
#  include <machine/64/$b>
#else
#  include <machine/32/$b>
#endif
EOF
      else
        cat > "$b" <<EOF
#if __x86_64
#  include <machine/64/$b>
#else
#  error "No such 32-bit include: <machine/32/$b>"
#endif
EOF
      fi
    done
    for i in 32/*; do
      if [ "$b" = "pc" ]; then continue; fi
      b=${i#32/}
      if [ ! -e "$b" ]; then
        cat > "$b" <<EOF
#if __x86_64
#  error "No such 64-bit include: <machine/64/$b>"
#else
#  include <machine/32/$b>
#endif
EOF
      fi
    done
  fi
  install -o root -g wheel -dm755 "${pkgdir}/usr/libdata/ldconfig"
  echo "/lib" > "${pkgdir}/usr/libdata/ldconfig/lib"
  echo "/usr/lib" >> "${pkgdir}/usr/libdata/ldconfig/lib"
  echo "/usr/local/lib" >> "${pkgdir}/usr/libdata/ldconfig/lib"

  #Install libcrypto pc file
  install -o root -g wheel -m655  "${srcdir}/libcrypto.pc"  "${pkgdir}/usr/libdata/pkgconfig/"
  install -o root -g wheel -m655  "${srcdir}/libarchive.pc" "${pkgdir}/usr/libdata/pkgconfig/"
  install -o root -g wheel -m655  "${srcdir}/openssl.pc"    "${pkgdir}/usr/libdata/pkgconfig/"

  #Setup console log
  msg "Setting up console.log"
  touch console.log
  install -o root -g wheel -m600 console.log ${pkgdir}/var/log/
  mv ${pkgdir}/sbin/reboot ${pkgdir}/sbin/reboot_

  echo "#!/bin/sh" > ${pkgdir}/sbin/reboot
  echo "shutdown -r now" >> ${pkgdir}/sbin/reboot
  chmod +x ${pkgdir}/sbin/reboot
  mv ${pkgdir}/usr/share/man/man8/reboot.8.gz ${pkgdir}/usr/share/man/man8/reboot_.8.gz

  
  #Prevent some log warnings
  install -o root -g wheel -dm755 ${pkgdir}/var/at/jobs/
  install -o root -g wheel -dm755 ${pkgdir}/var/db/entropy

  rm -rf ${pkgdir}/usr/lib32

  # set default pager to less
  sed -i '' -e 's|PAGER=more|PAGER=less|g' "${pkgdir}/root/.profile" "${pkgdir}/usr/share/skel/dot.profile"
}

_package_freebsd-source() {
  pkgdesc="FreeBSD source matching FreeBSD kernel ${_git_desc}"
  options=('!strip')
  arch=('any')
  cd "${srcdir}/usr/src"
  mkdir -p "${pkgdir}/usr/src"
  cp -r "${srcdir}/usr/src"/* "${pkgdir}/usr/src/"
  # The only place where -f is okay - the above doesn't usually include 
  # dot-files, but w/e...
  rm -rf "${pkgdir}"/usr/src/.git
}

if [[ "$CARCH" == "amd64" ]]; then
_package_freebsd-lib32() {
  pkgdesc="FreeBSD lib32 libraries ${_git_desc}"
  provides=("lib32-libc=${_freebsdver}")
  options=('!strip' 'staticlibs')
  arch=('amd64')
  install=lib32.install
  conflicts=(lib32-libexecinfo lib32-libarchive)
  provides=(lib32-libc=${_freebsdver} lib32-zlib=${_freebsdver} lib32-libexecinfo lib32-openssl lib32-libarchive=${_libarchivever})

  cd "${srcdir}/usr/src"
  install -o root -g wheel -dm755 "${pkgdir}"/usr/{lib32,libexec,bin}
  install -o root -g wheel -dm755 "${pkgdir}"/usr/lib32/{i18n,private}
  install -o root -g wheel -dm755 "${pkgdir}"/{lib,libexec}/
  install -o root -g wheel -dm755 "${pkgdir}"/usr/libdata/pkgconfig
  make -j1 "${bsdmakeflags[@]}" DESTDIR="$pkgdir" install32

  rm -r "${pkgdir}/usr/libdata/pkgconfig"

}
fi

_package_freebsd-init() {
  pkgdesc="FreeBSD init scripts ${_git_desc}"
  depends=('tmpfiles')
  provides=('init')
  conflicts=('openrc')
  options=('!strip')
  arch=('amd64')
  backup=("etc/rc.conf")

  cd "${srcdir}/usr/src"
  #remove rc tools for openrc
  install -o root -g wheel -dm755 ${pkgdir}/etc/
  cp -R "${srcdir}/usr/src/etc"/rc* ${pkgdir}/etc/ 

  install -m755 ${srcdir}/tmpfiles.in ${pkgdir}/etc/rc.d/tmpfiles

  #Files kept in world as needed by openrc also
  rm "${pkgdir}"/etc/rc.{bsdextended,firewall,initdiskless,resume,sendmail,suspend}

}

build() {
  flags_for_all
  _build
}
for _p in ${pkgname[@]}; do
  eval "package_${_p}() {
    flags_for_all
    _package_${_p}
  }"
done
