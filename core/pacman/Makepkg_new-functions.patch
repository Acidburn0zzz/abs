--- scripts/makepkg.sh.in.orig	2014-09-25 13:35:39.248774570 +0000
+++ scripts/makepkg.sh.in	2014-09-25 13:35:49.447741446 +0000
@@ -45,10 +45,11 @@
 declare -r confdir='@sysconfdir@'
 declare -r BUILDSCRIPT='@BUILDSCRIPT@'
 declare -r startdir="$PWD"
+declare -r absddir='/usr/share/absd'
 
 packaging_options=('strip' 'docs' 'libtool' 'staticlibs' 'emptydirs' 'zipman' \
                    'purge' 'upx' 'debug')
-other_options=('ccache' 'distcc' 'buildflags' 'makeflags')
+other_options=('ccache' 'distcc' 'buildflags' 'makeflags' 'fbsd10fix' 'libtoolfix' 'clang')
 splitpkg_overrides=('pkgver' 'pkgrel' 'epoch' 'pkgdesc' 'arch' 'url' 'license' \
                     'groups' 'depends' 'optdepends' 'provides' 'conflicts' \
                     'replaces' 'backup' 'options' 'install' 'changelog')
@@ -2015,6 +2016,11 @@
 		fi
 	done
 
+	if [[ -d "${startdir}/files" && ! -d "${srclinks}/${pkgbase}/files" ]]; then
+		msg2 "$(gettext "Adding %s directory ...")" "files"
+		ln -s "${startdir}/files" "${srclinks}/${pkgbase}/"
+	fi
+
 	local i
 	for i in 'changelog' 'install'; do
 		local file
@@ -2635,6 +2641,17 @@
 # default config is makepkg.conf
 MAKEPKG_CONF=${MAKEPKG_CONF:-$confdir/makepkg.conf}
 
+# source our external functions
+ABSD_FUNCTIONS=${ABSD_FUNCTIONS:-$absddir/absd-functions}
+
+if [[ -r $ABSD_FUNCTIONS ]]; then
+	source_safe "$ABSD_FUNCTIONS"
+else
+	error "$(gettext "%s not found.")" "$ABSD_FUNCTIONS"
+	plain "$(gettext "Aborting...")"
+	exit 1 # $E_CONFIG_ERROR
+fi
+
 # Source the config file; fail if it is not found
 if [[ -r $MAKEPKG_CONF ]]; then
 	source_safe "$MAKEPKG_CONF"
@@ -2995,6 +3012,31 @@
 	check_source_integrity
 	(( VERIFYSOURCE )) && exit 0 # $E_OK
 	extract_sources
+
+	# Set our compiler
+	if check_buildenv "clang" "y" && ! check_option "clang" "n"; then
+		run_function_safe set_compiler_clang
+	else
+		run_function_safe set_compiler_gcc
+	fi
+
+	# Use the FreeBSD 10 Fix
+	if check_buildenv "fbsd10fix" "y" && ! check_option "fbsd10fix" "n"; then
+		run_function_safe "fbsd10fix"
+	fi
+
+	# Use the FreeBSD libtool
+	if check_buildenv "!libtoolfix" "y" && check_option "libtoolfix" "y"; then
+		run_function_safe "libtoolfix"
+	fi
+
+	if [ -d "${startdir}/files" ]; then
+	# Use the apply_patches
+		run_function_safe "apply_patches"
+	fi
+
+
+
 	if (( PREPAREFUNC )); then
 		run_prepare
 	fi
