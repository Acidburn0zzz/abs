#
# Maintainer: Andrea Scarpino <andrea@archlinux.org>

pkgbase=qt5
pkgname=('qt5-base'
         'qt5-connectivity'
         'qt5-declarative'
         'qt5-doc'
         'qt5-graphicaleffects'
         'qt5-imageformats'
         'qt5-location'
         'qt5-multimedia'
         'qt5-quick1'
         'qt5-quickcontrols'
         'qt5-script'
         'qt5-sensors'
         'qt5-serialport'
         'qt5-svg'
         'qt5-tools'
         'qt5-translations'
         'qt5-webkit'
         'qt5-x11extras'
         'qt5-xmlpatterns')
pkgver=5.5.0
pkgrel=1
arch=('i686' 'amd64')
url='http://qt-project.org/'
license=('GPL3' 'LGPL' 'FDL' 'custom')
makedepends=('libxcb' 'xcb-proto' 'xcb-util' 'xcb-util-image' 'xcb-util-wm' 'xcb-util-keysyms'
            'mesa' 'at-spi2-core' 'alsa-lib' 'gstreamer0.10-base-plugins' 'libmng'
            'libjpeg-turbo' 'cups' 'libpulse' 'hicolor-icon-theme' 'desktop-file-utils'
            'postgresql-libs' 'libmariadbclient' 'sqlite' 'unixodbc' 'libfbclient'
            'python2' 'ruby' 'gperf' 'libxslt' 'libxcomposite' 'fontconfig'
            'openal' 'gtk2' 'libxkbcommon' 'python'
            'v4l-compat' 'pango'
            'gstreamer0.10-bad'
            )
# gstreamer video device stuff uses linux/videodev2.h
# it also wants gstreamer0.10-bad
groups=('qt' 'qt5')
_pkgfqn="qt-everywhere-opensource-src-${pkgver}"
patchdir=("${srcdir}/${_pkgfqn}")
_webkit_patches=(
	patch-Source_JavaScriptCore_assembler_ARMAssembler.h
	patch-Source__JavaScriptCore__runtime__JSCJSValueInlines.h
	patch-Source__WebCore__page__NavigatorBase.cpp
	patch-Source__WebCore__platform__graphics__surfaces__GraphicsSurface.h
	patch-Source__WebCore__platform__graphics__surfaces__GraphicsSurfaceToken.h
)
source=(http://download.qt-project.org/official_releases/qt/${pkgver%.*}/${pkgver}/single/${_pkgfqn}.tar.xz
        'assistant.desktop' 'designer.desktop' 'linguist.desktop' 'qdbusviewer.desktop'
        'use-python2.patch'
        'qmake.conf.clang'
        "${_port_patches[@]}"
	"${_webkit_patches[@]}"
        "${_patch_jscore[@]}"
        "${_patch_jsruntime[@]}")
md5sums=('65d5282f3dee0336da9ed1f77148952f'
         'b2897dd6a2967bccf8f10e397aafee55'
         '9638a78e502719ef8fe5f8d10d0361a9'
         '188da8f4c87316e730ebf1c6217bf5a0'
         '322b419b16c75d4de0ee7ad0a246caa1'
         'a378deccf363bd6079da459c89aff7b9'
         'c277c9c61c66f7f5027c0fba383aaaa2'
         '3ec6056caaea052fa518549f67d4e21c'
         'ce09ec3d6331cbfca666a4a55c852749'
         'b5c39c8faf196136e65aa49c39b406d6'
         'f730ae5d758f717a665bdc58ba0c4f8b'
         '7f5051db190659e8449018e43121b5c4')

options=('!fbsd10fix')

prepare() {
  cd "${srcdir}/${_pkgfqn}/qtwebkit"
  for i in "${_webkit_patches[@]}"; do
    msg "patch $i"
    patch -p0 -i "${srcdir}/$i"
  done

  cd "${srcdir}/${_pkgfqn}"
  gsed -i "s|-O2|${CXXFLAGS}|" qtbase/mkspecs/common/{g++,gcc}-base.conf
  gsed -i "/^QMAKE_LFLAGS_RPATH/s| -Wl,-rpath,||g" qtbase/mkspecs/common/gcc-base-unix.conf
  gsed -i "/^QMAKE_LFLAGS\s/s|+=|+= ${LDFLAGS}|g" qtbase/mkspecs/common/gcc-base.conf

  # Use python2 for Python 2.x
  gsed -i -e "s|#![ ]*/usr/bin/python$|#!/usr/bin/python2|" \
    -e "s|#![ ]*/usr/bin/env python$|#!/usr/bin/env python2|" \
    $(find . -name '*.py')

  # in qtwebengine there are still a lot of relative calls which need a workaround
  mkdir "${srcdir}"/python2-path
  ln -s /usr/bin/python2 "${srcdir}"/python2-path/python

  install -dm755 qtbase/mkspecs/freebsd-clang
  cp "${srcdir}/qmake.conf.clang" qtbase/mkspecs/freebsd-clang/qmake.conf
  echo '#include "../freebsd-g++/qplatformdefs.h"' > qtbase/mkspecs/freebsd-clang/qplatformdefs.h

  sed -i '' -e 's|QMAKE_LIBS              =|QMAKE_LIBS              = -lexecinfo -lutil|g' \
    qtbase/mkspecs/freebsd-clang/qmake.conf

  # freebsd build fixes:
  # don't try to build evdev input device support
  gsed -i '/input\.pri/d' qtbase/src/platformsupport/platformsupport.pro
  # remove -ldl from xcb-plugin which forces 'LIBS += -ldl' in its .pro file
  gsed -i '/-ldl/d'       qtbase/src/plugins/platforms/xcb/xcb-plugin.pro
  # remove <linux/types.h> includes in gstreamer related files
  gsed -i '/include <linux\/types\.h>/d' \
    qtmultimedia/src/gsttools/qgstreamervideoinputdevicecontrol.cpp \
    qtmultimedia/src/plugins/gstreamer/audiodecoder/qgstreameraudiodecoderserviceplugin.cpp \
    qtmultimedia/src/plugins/gstreamer/mediaplayer/qgstreamerplayerserviceplugin.cpp \
    qtmultimedia/src/plugins/gstreamer/mediacapture/qgstreamerv4l2input.cpp \
    qtmultimedia/src/plugins/gstreamer/mediacapture/qgstreamercaptureserviceplugin.cpp \
    qtmultimedia/src/plugins/gstreamer/camerabin/camerabincontrol.cpp \
    qtmultimedia/src/plugins/gstreamer/camerabin/camerabinserviceplugin.cpp

  sed -i '' -Ee 's|linux-?\*|unix|g' \
    qtwebkit/Source/JavaScriptCore/DerivedSources.pri \
    qtwebkit/Source/JavaScriptCore/JavaScriptCore.pri \
    qtwebkit/Source/JavaScriptCore/Target.pri \
    qtwebkit/Source/WebCore/WebCore.pri \
    qtwebkit/Tools/qmake/mkspecs/features/features.prf

  # configure tests fail with messages about wrong -j usage even without -j anywhere (MAKEFLAGS etc.)
  # (note: worked for me inside absd-build, but this way it should be fixed regardless):
  # (-> side effects may include more gmake use over make :p)
  gsed -i 's/\(QMAKE_MAKE = \)make/\1gmake/' qtbase/mkspecs/features/configure.prf

  # explicit, to not reapply on makepkg -e
  fbsd10fix
}

build() {
  cd ${_pkgfqn}

  export QTDIR="${srcdir}"/${_pkgfqn}
  export LD_LIBRARY_PATH="${QTDIR}"/qtbase/lib:"${QTDIR}"/qttools/lib:"${LD_LIBRARY_PATH}"
  export QT_PLUGIN_PATH="${QTDIR}"/qtbase/plugins
  export MAKE=gmake

  # python2 workaround
  export PATH="${srcdir}/python2-path:$PATH"

    #-platform "${QTDIR}/qtbase/mkspecs/freebsd-clang" \
  PYTHON=/usr/bin/python2 ./configure -confirm-license -opensource \
    -platform freebsd-clang \
    -prefix /usr \
    -bindir /usr/lib/qt/bin \
    -docdir /usr/share/doc/qt \
    -headerdir /usr/include/qt \
    -archdatadir /usr/lib/qt \
    -datadir /usr/share/qt \
    -sysconfdir /etc/xdg \
    -examplesdir /usr/share/doc/qt/examples \
    -plugin-sql-{psql,mysql,sqlite,odbc,ibase} \
    -system-sqlite \
    -openssl-linked \
    -nomake examples \
    -no-rpath \
    -optimized-qmake \
    -dbus-linked \
    -reduce-relocations \
    -no-evdev -no-eglfs -no-linuxfb -no-kms -v

  gmake

  # Fix paths
  find "${QTDIR}" -name Makefile -exec gsed -i "s|/usr/lib/qt/bin/qdoc|${QTDIR}/qtbase/bin/qdoc|g" {} +
  find "${QTDIR}" -name Makefile.qmake-docs -exec gsed -i "s|/usr/lib/qt/bin/qdoc|${QTDIR}/qtbase/bin/qdoc|g" {} +
  find "${QTDIR}" -name Makefile -exec gsed -i "s|/usr/lib/qt/bin/qhelpgenerator|${QTDIR}/qttools/bin/qhelpgenerator|g" {} +
  find "${QTDIR}" -name Makefile.qmake-docs -exec gsed -i "s|/usr/lib/qt/bin/qhelpgenerator|${QTDIR}/qttools/bin/qhelpgenerator|g" {} +
  gsed -i "s|/usr/lib/qt/bin/qhelpgenerator|${QTDIR}/qttools/bin/qhelpgenerator|g" qtwebkit/Source/Makefile.api

  gmake docs
}

package_qt5-base() {
  pkgdesc='A cross-platform application and UI framework'
  depends=('libjpeg-turbo' 'xcb-util-keysyms' 'libgl' 'dbus' 'fontconfig'
           'xcb-util-wm' 'libxrender' 'libxi' 'sqlite' 'xcb-util-image' 'icu'
           'qtchooser' 'libxkbcommon' 'pango' 'gtk2' 'libsm' 'libice' )
  optdepends=('postgresql-libs: PostgreSQL driver'
              'libmariadbclient: MariaDB driver'
              'unixodbc: ODBC driver'
              'libfbclient: Firebird/iBase driver')
  conflicts=('qt')
  options=('staticlibs') #libQt5PlatformSupport builds static only

  cd ${_pkgfqn}/qtbase
  gmake INSTALL_ROOT="${pkgdir}" install

  install -dm755 "${pkgdir}"/usr/share/licenses/${pkgname}
  install -m644 LGPL_EXCEPTION.txt \
    "${pkgdir}"/usr/share/licenses/${pkgname}/LGPL_EXCEPTION.txt

  # Fix wrong path in prl files
  find "${pkgdir}/usr/lib" -type f -name '*.prl' \
    -exec gsed -i -e '/^QMAKE_PRL_BUILD_DIR/d;s/\(QMAKE_PRL_LIBS =\).*/\1/' {} \;

  # Fix wrong qmake path in pri file
  gsed -i "s|${srcdir}/${_pkgfqn}/qtbase|/usr|" \
    "${pkgdir}"/usr/lib/qt/mkspecs/modules/qt_lib_bootstrap_private.pri

  # Useful symlinks
  install -d "${pkgdir}"/usr/bin
  for b in "${pkgdir}"/usr/lib/qt/bin/*; do
    ln -s /usr/lib/qt/bin/$(basename $b) "${pkgdir}"/usr/bin/$(basename $b)-qt5
  done
}

package_qt5-connectivity() {
  pkgdesc='A cross-platform application and UI framework (QtBluetooth, QtNfc)'
  depends=('qt5-declarative')

  cd ${_pkgfqn}/qtconnectivity
  gmake INSTALL_ROOT="${pkgdir}" install

  # Fix wrong path in prl files
  find "${pkgdir}/usr/lib" -type f -name '*.prl' \
    -exec gsed -i -e '/^QMAKE_PRL_BUILD_DIR/d;s/\(QMAKE_PRL_LIBS =\).*/\1/' {} \;

}

package_qt5-declarative() {
  pkgdesc='A cross-platform application and UI framework (QtQml, QtQuick)'
  depends=('qt5-xmlpatterns')
  conflicts=('qt')

  cd ${_pkgfqn}/qtdeclarative
  gmake INSTALL_ROOT="${pkgdir}" install

  # Fix wrong path in prl files
  find "${pkgdir}/usr/lib" -type f -name '*.prl' \
    -exec gsed -i -e '/^QMAKE_PRL_BUILD_DIR/d;s/\(QMAKE_PRL_LIBS =\).*/\1/' {} \;

  # Useful symlinks
  install -d "${pkgdir}"/usr/bin
  for b in "${pkgdir}"/usr/lib/qt/bin/*; do
    ln -s /usr/lib/qt/bin/$(basename $b) "${pkgdir}"/usr/bin/$(basename $b)-qt5
  done

}

package_qt5-doc() {
  pkgdesc='A cross-platform application and UI framework (Documentation)'
  depends=('qt5-base')
#  arch=('any')
  conflicts=('qt-doc')
  replaces=('qt-doc')
  provides=('qt-doc')
  options=('docs' '!emptydirs')
  groups=()

  cd ${_pkgfqn}
  gmake INSTALL_ROOT="${pkgdir}" install_docs

  install -dm755 "${pkgdir}"/usr/share/licenses/${pkgname}
  install -m644 LGPL_EXCEPTION.txt \
    "${pkgdir}"/usr/share/licenses/${pkgname}/LGPL_EXCEPTION.txt
}

package_qt5-xmlpatterns() {
  pkgdesc='A cross-platform application and UI framework (QtXmlPatterns)'
  depends=('qt5-base')
  conflicts=('qt')

  cd ${_pkgfqn}/qtxmlpatterns
  gmake INSTALL_ROOT="${pkgdir}" install

  # Fix wrong path in prl files
  find "${pkgdir}/usr/lib" -type f -name '*.prl' \
    -exec gsed -i -e '/^QMAKE_PRL_BUILD_DIR/d;s/\(QMAKE_PRL_LIBS =\).*/\1/' {} \;

  # Useful symlinks
  install -d "${pkgdir}"/usr/bin
  for b in "${pkgdir}"/usr/lib/qt/bin/*; do
    ln -s /usr/lib/qt/bin/$(basename $b) "${pkgdir}"/usr/bin/$(basename $b)-qt5
  done

  install -dm755 "${pkgdir}"/usr/share/licenses/${pkgname}
  install -m644 LGPL_EXCEPTION.txt \
    "${pkgdir}"/usr/share/licenses/${pkgname}/LGPL_EXCEPTION.txt
}

package_qt5-translations() {
  pkgdesc='A cross-platform application and UI framework (Translations)'
  depends=('qt5-base')
  conflicts=('qt')

  cd ${_pkgfqn}/qttranslations
  gmake INSTALL_ROOT="${pkgdir}" install

  install -dm755 "${pkgdir}"/usr/share/licenses/${pkgname}
  install -m644 LGPL_EXCEPTION.txt \
    "${pkgdir}"/usr/share/licenses/${pkgname}/LGPL_EXCEPTION.txt
}

package_qt5-multimedia() {
  pkgdesc='A cross-platform application and UI framework (QtMultimedia)'
  depends=('qt5-declarative' 'libpulse' 'gstreamer0.10-base' 'openal' 'gstreamer0.10-bad')
  conflicts=('qt')

  cd ${_pkgfqn}/qtmultimedia
  gmake INSTALL_ROOT="${pkgdir}" install

  # Fix wrong path in prl files
  find "${pkgdir}/usr/lib" -type f -name '*.prl' \
    -exec gsed -i -e '/^QMAKE_PRL_BUILD_DIR/d;s/\(QMAKE_PRL_LIBS =\).*/\1/' {} \;

  install -dm755 "${pkgdir}"/usr/share/licenses/${pkgname}
  install -m644 LGPL_EXCEPTION.txt \
    "${pkgdir}"/usr/share/licenses/${pkgname}/LGPL_EXCEPTION.txt
}

package_qt5-graphicaleffects() {
  pkgdesc='A cross-platform application and UI framework (QtGraphicalEffects)'
  depends=('qt5-declarative')

  cd ${_pkgfqn}/qtgraphicaleffects
  gmake INSTALL_ROOT="${pkgdir}" install

  install -dm755 "${pkgdir}"/usr/share/licenses/${pkgname}
  install -m644 LGPL_EXCEPTION.txt \
    "${pkgdir}"/usr/share/licenses/${pkgname}/LGPL_EXCEPTION.txt
}

package_qt5-imageformats() {
  pkgdesc='A cross-platform application and UI framework (Images plugins)'
  depends=('qt5-base' 'libtiff' 'libmng')
  conflicts=('qt')

  cd ${_pkgfqn}/qtimageformats
  gmake INSTALL_ROOT="${pkgdir}" install

  install -dm755 "${pkgdir}"/usr/share/licenses/${pkgname}
  install -m644 LGPL_EXCEPTION.txt \
    "${pkgdir}"/usr/share/licenses/${pkgname}/LGPL_EXCEPTION.txt
}

package_qt5-location() {
  pkgdesc='A cross-platform application and UI framework (QtLocation, QtPositioning)'
  depends=('qt5-declarative')

  cd ${_pkgfqn}/qtlocation
  gmake INSTALL_ROOT="${pkgdir}" install

  # Fix wrong path in prl files
  find "${pkgdir}/usr/lib" -type f -name '*.prl' \
    -exec gsed -i -e '/^QMAKE_PRL_BUILD_DIR/d;s/\(QMAKE_PRL_LIBS =\).*/\1/' {} \;

  install -dm755 "${pkgdir}"/usr/share/licenses/${pkgname}
  install -m644 LGPL_EXCEPTION.txt \
    "${pkgdir}"/usr/share/licenses/${pkgname}/LGPL_EXCEPTION.txt
}

package_qt5-quick1() {
  pkgdesc='A cross-platform application and UI framework (QtDeclarative)'
  depends=('qt5-webkit' 'qt5-script')
  conflicts=('qt')

  cd ${_pkgfqn}/qtquick1
  gmake INSTALL_ROOT="${pkgdir}" install

  # Fix wrong path in prl files
  find "${pkgdir}/usr/lib" -type f -name '*.prl' \
    -exec gsed -i -e '/^QMAKE_PRL_BUILD_DIR/d;s/\(QMAKE_PRL_LIBS =\).*/\1/' {} \;

  # Useful symlinks
  install -d "${pkgdir}"/usr/bin
  for b in "${pkgdir}"/usr/lib/qt/bin/*; do
    ln -s /usr/lib/qt/bin/$(basename $b) "${pkgdir}"/usr/bin/$(basename $b)-qt5
  done

}

package_qt5-quickcontrols() {
  pkgdesc='A cross-platform application and UI framework (QtQuick)'
  depends=('qt5-declarative')

  cd ${_pkgfqn}/qtquickcontrols
  gmake INSTALL_ROOT="${pkgdir}" install
}

package_qt5-script() {
  pkgdesc='A cross-platform application and UI framework (QtScript)'
  depends=('qt5-base')
  conflicts=('qt')

  cd ${_pkgfqn}/qtscript
  gmake INSTALL_ROOT="${pkgdir}" install

  # Fix wrong path in prl files
  find "${pkgdir}/usr/lib" -type f -name '*.prl' \
    -exec gsed -i -e '/^QMAKE_PRL_BUILD_DIR/d;s/\(QMAKE_PRL_LIBS =\).*/\1/' {} \;
}

package_qt5-sensors() {
  pkgdesc='A cross-platform application and UI framework (QtSensors)'
  depends=('qt5-declarative')

  cd ${_pkgfqn}/qtsensors
  gmake INSTALL_ROOT="${pkgdir}" install

  # Fix wrong path in prl files
  find "${pkgdir}/usr/lib" -type f -name '*.prl' \
    -exec gsed -i -e '/^QMAKE_PRL_BUILD_DIR/d;s/\(QMAKE_PRL_LIBS =\).*/\1/' {} \;
}

package_qt5-serialport() {
  pkgdesc='A cross-platform application and UI framework (QtSerialPort)'
  depends=('qt5-base')

  cd ${_pkgfqn}/qtserialport
  gmake INSTALL_ROOT="${pkgdir}" install

  # Fix wrong path in prl files
  find "${pkgdir}/usr/lib" -type f -name '*.prl' \
    -exec gsed -i -e '/^QMAKE_PRL_BUILD_DIR/d;s/\(QMAKE_PRL_LIBS =\).*/\1/' {} \;
}

package_qt5-svg() {
  pkgdesc='A cross-platform application and UI framework (QtSvg)'
  depends=('qt5-base')
  conflicts=('qt')

  cd ${_pkgfqn}/qtsvg
  gmake INSTALL_ROOT="${pkgdir}" install

  # Fix wrong path in prl files
  find "${pkgdir}/usr/lib" -type f -name '*.prl' \
    -exec gsed -i -e '/^QMAKE_PRL_BUILD_DIR/d;s/\(QMAKE_PRL_LIBS =\).*/\1/' {} \;
}

package_qt5-tools() {
  pkgdesc='A cross-platform application and UI framework (Development Tools, QtHelp)'
  depends=('qt5-webkit' 'desktop-file-utils' 'qt5-translations' 'hicolor-icon-theme'
           'xdg-utils')
  optdepends=('qt5-doc: documentation')
  install='qt5-tools.install'
  conflicts=('qt')
  options=('staticlibs') # libQt5UiTools builds as static only$

  cd ${_pkgfqn}/qttools
  gmake INSTALL_ROOT="${pkgdir}" install

  # install missing icons and desktop files
  for icon in src/linguist/linguist/images/icons/linguist-*-32.png ; do
    size=$(echo $(basename ${icon}) | cut -d- -f2)
    install -dm755 \
      "${pkgdir}/usr/share/icons/hicolor/${size}x${size}/apps"
    install -p -D -m644 ${icon} \
      "${pkgdir}/usr/share/icons/hicolor/${size}x${size}/apps/linguist.png"
  done

  for i in 32 128; do
    install -dm755 "${pkgdir}/usr/share/icons/hicolor/${i}x${i}/apps"
  done
  install -m644 src/assistant/assistant/images/assistant.png \
    "${pkgdir}/usr/share/icons/hicolor/32x32/apps/assistant.png"
  install -m644 src/assistant/assistant/images/assistant-128.png \
    "${pkgdir}/usr/share/icons/hicolor/128x128/apps/assistant.png"
  install -m644 src/designer/src/designer/images/designer.png \
    "${pkgdir}/usr/share/icons/hicolor/128x128/apps/designer.png"
  install -m644 src/qdbus/qdbusviewer/images/qdbusviewer.png \
    "${pkgdir}/usr/share/icons/hicolor/32x32/apps/qdbusviewer.png"
  install -m644 src/qdbus/qdbusviewer/images/qdbusviewer-128.png \
    "${pkgdir}/usr/share/icons/hicolor/128x128/apps/qdbusviewer.png"
  install -d "${pkgdir}/usr/share/applications"
  install -m644 "${srcdir}"/{linguist,designer,assistant,qdbusviewer}.desktop \
    "${pkgdir}/usr/share/applications/"

  # Fix wrong path in prl files
  find "${pkgdir}/usr/lib" -type f -name '*.prl' \
    -exec gsed -i -e '/^QMAKE_PRL_BUILD_DIR/d;s/\(QMAKE_PRL_LIBS =\).*/\1/' {} \;

  # Useful symlinks
  install -d "${pkgdir}"/usr/bin
  for b in "${pkgdir}"/usr/lib/qt/bin/*; do
    ln -s /usr/lib/qt/bin/$(basename $b) "${pkgdir}"/usr/bin/$(basename $b)-qt5
  done

}

package_qt5-webkit() {
  pkgdesc='A cross-platform application and UI framework (QtWebKit)'
  depends=('qt5-sensors' 'qt5-location' 'gstreamer0.10-base' 'libxslt' 'libxcomposite')
  license=('GPL3' 'LGPL' 'FDL')

  cd ${_pkgfqn}/qtwebkit
  gmake INSTALL_ROOT="${pkgdir}" install

  # Fix wrong path in prl files
  find "${pkgdir}/usr/lib" -type f -name '*.prl' \
    -exec gsed -i -e '/^QMAKE_PRL_BUILD_DIR/d;s/\(QMAKE_PRL_LIBS =\).*/\1/' {} \;

  # Fix wrong path in pc file
  perl -pi -e "s, -L${srcdir}/?\S+,,g" "${pkgdir}"/usr/lib/pkgconfig/Qt5WebKit.pc
}

package_qt5-x11extras() {
  pkgdesc='A cross-platform application and UI framework (QtX11Extras)'
  depends=('qt5-base')

  cd ${_pkgfqn}/qtx11extras
  gmake INSTALL_ROOT="${pkgdir}" install

  # Fix wrong path in prl files
  find "${pkgdir}/usr/lib" -type f -name '*.prl' \
    -exec gsed -i -e '/^QMAKE_PRL_BUILD_DIR/d;s/\(QMAKE_PRL_LIBS =\).*/\1/' {} \;

}

