# Port: lang/guile2

pkgname=guile
pkgver=2.0.11
pkgrel=1
pkgdesc="a portable, embeddable Scheme implementation written in C"
url="http://www.gnu.org/software/guile/"
arch=('i386' 'amd64')
license=('GPL')
depends=('gmp' 'libltdl' 'texinfo' 'libffi' 'gc' 'libunistring' 'libiconv' 'gettext-runtime')
makedepends=('pkg-config')
install=guile.install
source=(ftp://ftp.gnu.org/pub/gnu/${pkgname}/${pkgname}-${pkgver}.tar.gz)
sha1sums=('3cdd1c4956414bffadea13e5a1ca08949016a802')

prepare() {
  cd "${pkgname}-${pkgver}"

  # set path to usr/local first for iconv there
  export PATH=/usr/local/bin:${PATH}

  for file in libguile/smob.c libguile/filesys.c libguile/gc.c \
    libguile/mallocs.c libguile/eval.c libguile/gc-malloc.c \
    libguile/ports.c; do
  sed -i '' -e 's|<malloc\.h>|<stdlib.h>|g' "${file}"
  done

  sed -i '' -e 's|sys/time.h sys/timeb.h|sys/time.h |g' \
    configure
}

build() {
  cd "${pkgname}-${pkgver}"


  ./configure --prefix=/usr \
    --disable-static  \
    --disable-error-on-warning \
    --with-libiconv-prefix=/usr/local

	sed -i '' -e '1c\
#!/usr/bin/bash' build-aux/install-sh
	gmake LDFLAGS+="-lpthread" -j1
}

package() {
  cd "${srcdir}/${pkgname}-${pkgver}"
  gmake DESTDIR="${pkgdir}" install

  rm "$pkgdir"/usr/lib/charset.alias
}
