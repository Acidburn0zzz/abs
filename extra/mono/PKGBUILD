pkgname=mono
pkgver=4.0.4.1
pkgrel=1
pkgdesc="Free implementation of the .NET platform including runtime and compiler"
arch=('i386' 'amd64')
license=('GPL' 'LGPL2' 'MPL' 'custom:MITX11')
url="http://www.mono-project.com/"
depends=('zlib' 'libgdiplus>=2.10' 'bash') # 'gc>=7.2')
makedepends=('pkgconf')
options=('!makeflags')
provides=('monodoc')
conflicts=('monodoc')
install=mono.install
patchdir=(${pkgname}-${pkgver%.*})
source=(http://download.mono-project.com/sources/${pkgname}/${pkgname}-${pkgver}.tar.bz2
        mono.binfmt.d
        mono.install)
sha1sums=('12f3dbdac92e937cafba1d4e5a168c4cf2620935'
          '3cbf1dccc5758a27bf91fd216b5485708fb6cff3'
          '9d7fc540a0c1610ef35d078d5dcc458356f13901')

prepare() {
  cd "${srcdir}"/${pkgname}-${pkgver%.*}

  sed -i '' -e 's|^#!/bin/bash|#!/usr/bin/env bash|g' \
    scripts/mono-find-provides.in \
    scripts/mono-find-requires.in \
    scripts/mono-test-install
  find . -name '*.sh' | xargs sed -i '' -e \
    's|^#!/bin/bash|#!/bin/sh|g'

}

build() {
  cd "${pkgname}-${pkgver%.*}"

  # make some more checks pass
  export LDFLAGS="${LDFLAGS} -lm"

  # build mono
  ac_cv_header_sys_inotify_h=no \
  ./configure --prefix=/usr --sysconfdir=/etc \
    --with-mcs-docs=no
  gmake -j1
#get-monolite-latest
#  gmake -j1 EXTERNAL_MCS=${PWD}/mcs/class/lib/monolite/gmcs.exe

#  # build jay
#  cd "${srcdir}"/${pkgname}-${pkgver}/mcs/jay
#  gmake -j1
}

package() {
  cd "${pkgname}-${pkgver%.*}"
  gmake DESTDIR="${pkgdir}" install

#  # install jay
#  cd "${srcdir}"/${pkgname}-${pkgver}/mcs/jay
#  gmake DESTDIR="${pkgdir}" prefix=/usr INSTALL=../../install-sh install
#  cd "${srcdir}"/${pkgname}-${pkgver}

  # install binfmt conf file and pathes
  install -dm755 "${pkgdir}"/usr/lib/binfmt.d
  install -m644 "${srcdir}"/mono.binfmt.d "${pkgdir}"/usr/lib/binfmt.d/mono.conf

  #install license
  mkdir -p "${pkgdir}"/usr/share/licenses/${pkgname}
  install -m644 mcs/MIT.X11 "${pkgdir}"/usr/share/licenses/${pkgname}/

  #fix .pc file to be able to request mono on what it depends, fixes #go-oo build
  gsed -i -e "s:#Requires:Requires:" "${pkgdir}"/usr/libdata/pkgconfig/mono.pc

  rm "${pkgdir}/usr/bin/mono"
  ln -s mono-sgen "${pkgdir}/usr/bin/mono"
}
