# $Id: PKGBUILD 196900 2013-10-21 03:40:08Z td123 $
# Maintainer: Thomas Dziedzic <gostrc@gmail.com>
# Maintainer: Vesa Kaihlavirta <vesa@archlinux.org>
# Special note for devs looking to upgrade this package:
#   ghc places a unique hash for each library when it is built.
#   Libraries depend on versions specified by those hashes.
#   This implies that all libraries need to be rebuilt when ghc is rebuilt.

# use the following command to print out packages that need to get rebuilt
# grep -r ghc /var/abs/ | awk -F '/' '{ print $5; }' | sort -u

# Contributor: Wolfgang Bumiller <archbsd at bumiller dot com>
#   Note that I just added the freebsd bootstrapping
#   The comments in check() are still from ArchLinux

# 2: build the bootstrap wrapper libs, unpack and install the bootstrap ghc
# 1: use the existing bootstrap ghc - useful for makepkg -eR retries
# 0: use the system-installed ghc
_ghc_bootstrap=0

pkgname=ghc
pkgver=7.8.2
_pkgver=7.8.2
pkgrel=1
pkgdesc='The Glasgow Haskell Compiler'
arch=('i686' 'x86_64')
url='http://www.haskell.org/ghc/'
license=('custom')
depends=('perl' 'gmp' 'gcc' 'libffi' 'gnu-libiconv' 'gnu-binutils')
makedepends=('perl' 'libxslt' 'docbook-xsl' 'pacman>=4.1.2-22')
(( _ghc_bootstrap )) || makedepends=('ghc' "${makedepends[@]}")
checkdepends=('python2')
install='ghc.install'
options=('staticlibs' '!clang')
provides=('haskell-array=0.5.0.0'
          'haskell-base=4.7.0.0'
          'haskell-binary=0.7.1.0'
          'haskell-bin-package-db=0.0.0.0'
          'haskell-bytestring=0.10.4.0'
          'haskell-containers=0.5.5.1'
          'haskell-deepseq=1.3.0.2'
          'haskell-directory=1.2.1.0'
          'haskell-filepath=1.3.0.2'
          'haskell-ghc-prim=0.3.1.0'
          'haskell-haskell2010=1.1.2.0'
          'haskell-haskell98=2.0.0.3'
          'haskell-hoopl=3.10.0.1'
          'haskell-hpc=0.6.0.1'
          'haskell-integer-gmp=0.5.1.0'
          'haskell-old-locale=1.0.0.6'
          'haskell-old-time=1.1.0.2'
          'haskell-pretty=1.1.1.1'
          'haskell-process=1.2.0.0'
          'haskell-template-haskell=2.9.0.0'
          'haskell-time=1.4.2'
          'haskell-transformers=0.3.0.0'
          'haskell-unix=2.7.0.1'
          'haskell-cabal=1.18.1.3'
         )
replaces=('haskell-array<0.5.0.0'
          'haskell-base<4.7.0.0'
          'haskell-binary<0.7.1.0'
          'haskell-bin-package-db<0.0.0.0'
          'haskell-bytestring<0.10.4.0'
          'haskell-containers<0.5.5.1'
          'haskell-deepseq<1.3.0.2'
          'haskell-directory<1.2.1.0'
          'haskell-filepath<1.3.0.2'
          'haskell-ghc-prim<0.3.1.0'
          'haskell-haskell2010<1.1.2.0'
          'haskell-haskell98<2.0.0.3'
          'haskell-hoopl<3.10.0.1'
          'haskell-hpc<0.6.0.1'
          'haskell-integer-gmp<0.5.1.0'
          'haskell-old-locale<1.0.0.6'
          'haskell-old-time<1.1.0.2'
          'haskell-pretty<1.1.1.1'
          'haskell-process<1.2.0.0'
          'haskell-template-haskell<2.9.0.0'
          'haskell-time<1.4.2'
          'haskell-transformers'
          'haskell-unix<2.7.0.1'
          'haskell-cabal<1.18.1.3'
         )
_port_patches=(
        patch-configure.ac
        patch-libraries__Cabal__Cabal__Distribution__Simple__Program__Builtin.hs
        patch-libraries__Cabal__Cabal__Distribution__Simple__Program__Types.hs
        patch-libraries__Cabal__Cabal__Distribution__Simple__Utils.hs
        patch-libraries__base__cbits__iconv.c)
source=("http://www.haskell.org/ghc/dist/${_pkgver}/ghc-${_pkgver}-src.tar.xz"
        "http://www.haskell.org/ghc/dist/${_pkgver}/ghc-${_pkgver}-testsuite.tar.xz"
        'build.mk'
        'ghc'
        "${_port_patches[@]}")
# they'd unpack to the same location...
#if (( _ghc_bootstrap )); then
#  source=("${source[@]}" 
#          "http://www.haskell.org/ghc/dist/${_pkgver}/ghc-${_pkgver}-${CARCH}-unknown-freebsd.tar.gz2")
#fi

prepare() {
  cd ghc-${_pkgver}
  for i in "${_port_patches[@]}"; do
    msg "Patch $i"
    patch -p0 -i "${srcdir}/$i"
  done
  autoreconf
}

_bootstrap_build() {
  msg "BOOTSTRAP BUILD..."
  sleep 1

  cd "${srcdir}"
  rm -rf bootstrap lib_compat usr
  mkdir bootstrap
  mkdir lib_compat
  mkdir usr

  msg "Building FreeBSD10 libiconv compatibility wrapper library"
  cat > lib_compat/libiconv_compat_wrapper.c << EOF
#include <stddef.h>
typedef struct iconv_s *iconv_t;
extern iconv_t iconv_open(const char *d, const char *s);
extern int     iconv_close(iconv_t i);
extern size_t  iconv(iconv_t cd, const char ** __restrict src, size_t * __restrict srcleft,
                     char ** __restrict dst, size_t * __restrict dstleft);
iconv_t libiconv_open(const char *d, const char *s) {
  return iconv_open(d, s);
}
int libiconv_close(iconv_t i) {
  return iconv_close(i);
}
size_t libiconv(iconv_t cd, const char ** __restrict src, size_t * __restrict srcleft,
                char ** __restrict dst, size_t * __restrict dstleft)
{
  return iconv(cd, src, srcleft, dst, dstleft);
}
EOF
  CC="${CC:-clang}"
  "$CC" -shared -fPIC -o lib_compat/libiconv.so.3 lib_compat/libiconv_compat_wrapper.c -lgettextlib
  msg "Linking FreeBSD10 compatibility libraries"
  ln -s libiconv.so.3 lib_compat/libiconv.so
  #for i in libgmp.so.10; do
  #  ln -s "/usr/lib/${i%.*}" "lib_compat/$i"
  #done

  msg "Unpacking bootstrap archive..."
  bootstrapfile="ghc-${_pkgver}-${CARCH}-portbld-freebsd.tar.xz"
  if ! [ -f "../${bootstrapfile}" ]; then
    (cd .. && fetch "http://www.haskell.org/ghc/dist/${_pkgver}/${bootstrapfile}")
  fi
  tar -C bootstrap -xf "../${bootstrapfile}"

  msg "Installing bootstrap distribution"
  export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:${srcdir}/lib_compat"

  cd bootstrap/ghc-${_pkgver}
  ./configure --prefix="${srcdir}/usr"
  gmake install
  cd "${srcdir}"
  msg "BOOSTRAP ARCHIVE INSTALLED"
  msg "Your system needs -liconv in the linker's search path..."
  msg "So link a /usr/lib/libiconv.so to the one in $srcdir/lib_compat"
  msg "After that... makepkg -eR"
  msg "Unless you've been really really fast or smart were smart enough to ^Z"
  sleep 1
}

build() {
  if (( _ghc_bootstrap )); then
    (( _ghc_bootstrap > 1 )) && _bootstrap_build
    export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:${srcdir}/lib_compat"
    export PATH="${srcdir}/usr/bin:${PATH}"
  fi

  cd ghc-${_pkgver}

  cp ${srcdir}/build.mk mk/build.mk

  ./configure \
    --prefix=/usr \
    --with-system-libffi \
    --with-ffi-includes=/usr/include \
    --with-ffi-libraries=/usr/lib

  gmake
}

check() {
  # keep this otherwise a lot of tests will show as unexpected failures... need to investigate why using -jn for n > 1 does this...
  unset MAKEFLAGS

  cd ghc-${_pkgver}

  # python2 rename
  #gsed -e 's/PYTHON = python/&2/' -i testsuite/mk/boilerplate.mk
  gsed -e 's_#!/usr/bin/env python_&2_' -i testsuite/timeout/calibrate testsuite/timeout/timeout.py

  # upstream known failures on both i686 and x86_64:
  #    ghci.debugger/scripts     break011 [bad stderr] (ghci)
  #    perf/compiler             parsing001 [stat not good enough] (normal)
  #    simplCore/should_compile  spec-inline [stderr mismatch] (optasm)
  # upstream known failures on i686 only:
  #    numrun012 test fails on i686 works on x86_64 - http://hackage.haskell.org/trac/ghc/ticket/5856
  gmake test

  # enabling threads to speed up
  # causes more failures than make test, need to investigate
  # upstream known failures on both i686 and x86_64:
  #    perf/compiler             parsing001 [stat not good enough] (normal)
  #    simplCore/should_compile  spec-inline [stderr mismatch] (optasm)
  # upstream known failures on i686 only:
  #    numrun012 test fails on i686 works on x86_64 - http://hackage.haskell.org/trac/ghc/ticket/5856
  #gmake THREADS=9 test

  # will most likely cause lots of failures
  # enable this when upstream has 0 test failures from a simple 'make test'
  # zero unexpected failures on all tier 1 platforms - http://hackage.haskell.org/trac/ghc/ticket/5757
  #gmake fulltest
}

package() {
  cd ghc-${_pkgver}

  gmake DESTDIR=${pkgdir} install

  install -d ${pkgdir}/usr/share/licenses/ghc
  install -m644 LICENSE \
    ${pkgdir}/usr/share/licenses/ghc

  install -d ${pkgdir}/usr/share/bash-completion/completions
  install -m644 ${srcdir}/ghc \
    ${pkgdir}/usr/share/bash-completion/completions

  if (( _ghc_bootstrap )); then
    msg "YOU COMPILED A BOOTSTRAP GHC"
    msg "Delete the previously created /usr/lib/libiconv.so symlinks"
    msg "Install this package and rebuild..."
  fi
}
sha1sums=('fe86ae790b7e8e5b4c78db7a914ee375bc6d9fc3'
          '3abe4e0ebbed17e825573f0f34be0eca9179f9e4'
          'a5e2b8d920a8af597c948f6917c0cfc90f779a22'
          '6f7c17dfd466ab5e831331c9e9f0604aeb85cc64'
          '0bb6dfc88421e23879006cc945e913354201ee64'
          'd1b655db49f3de4984793cb17bc6f141afd8c163'
          'a7909b9d38bfd28e45e1c6788b478d0f232ad3e2'
          'c949d71712a87b9d79afce83257016b904179cab'
          '349fb619a01382434d60aa0936bce172bde73d7e')
