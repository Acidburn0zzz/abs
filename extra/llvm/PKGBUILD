pkgname=('llvm' 'llvm-libs')
pkgver=3.7.1
pkgrel=3
arch=('i386' 'amd64')
url="http://llvm.org/"
license=('custom:University of Illinois/NCSA Open Source License')
makedepends=('cmake' 'libffi' 'python2' 'python-sphinx' 'swig' 'ninja' 'binutils')
options=('staticlibs' 'clang')
patchdir=(llvm-$pkgver.src)
source=(http://llvm.org/releases/$pkgver/llvm-$pkgver.src.tar.xz{,.sig}
        http://llvm.org/releases/$pkgver/cfe-$pkgver.src.tar.xz{,.sig}
        http://llvm.org/releases/$pkgver/clang-tools-extra-$pkgver.src.tar.xz{,.sig}
        http://llvm.org/releases/$pkgver/compiler-rt-$pkgver.src.tar.xz{,.sig}
        http://llvm.org/releases/$pkgver/lldb-$pkgver.src.tar.xz{,.sig}
	http://llvm.org/releases/$pkgver/lld-$pkgver.src.tar.xz
	http://llvm.org/releases/$pkgver/openmp-$pkgver.src.tar.xz
        llvm-3.7.0-link-tools-against-libLLVM.patch
        llvm-3.7.0-export-more-symbols.patch
        clang-tools-extra-3.7.0-install-clang-query.patch
        lldb-3.7.0-avoid-linking-to-libLLVM.patch
        llvm-Config-llvm-config.h)
sha256sums=('be7794ed0cec42d6c682ca8e3517535b54555a3defabec83554dbc74db545ad5'
            'SKIP'
            '56e2164c7c2a1772d5ed2a3e57485ff73ff06c97dff12edbeea1acc4412b0674'
            'SKIP'
            '4a91edaccad1ce984c7c49a4a87db186b7f7b21267b2b03bcf4bd7820715bc6b'
            'SKIP'
            '9d4769e4a927d3824bcb7a9c82b01e307c68588e6de4e7f04ab82d82c5af8181'
            'SKIP'
            '9a0bc315ef55f44c98cdf92d064df0847f453ed156dd0ef6a87e04f5fd6a0e01'
            'SKIP'
            'a929cb44b45e3181a0ad02d8c9df1d3fc71e001139455c6805f3abf2835ef3ac'
            '9a702e20c247014f6de8c45b738c6ea586eca0559304520f565ac9a7cba4bf9a'
            'cf9c8b4d70b4547eda162644658c5c203c3139fcea6c75003b6cd7dc11a8cccc'
            'a1c9f36b97c639666ab6a1bd647a08a027e93e3d3cfd6f5af9c36e757599ce81'
            '3abf85430c275ecb8dbb526ecb82b1c9f4b4f782a8a43b5a06d040ec0baba7e7'
            '2d53b6ed4c7620eeade87e7761b98093a0434801ddd599056daed7881141fb01'
            '8b99d178ec141104a32410d0f97d4b282176c335b826eae4c8d3408c77175502')
validpgpkeys=('11E521D646982372EB577A1F8F0871F202119294'
              'B6C8F98282B944E3B0D5C2530FC3042E345AD05D')

prepare() {
  cd "$srcdir/llvm-$pkgver.src"

  # At the present, clang must reside inside the LLVM source code tree to build
  # See http://llvm.org/bugs/show_bug.cgi?id=4840
  mv "$srcdir/cfe-$pkgver.src" tools/clang

  mv "$srcdir/clang-tools-extra-$pkgver.src" tools/clang/tools/extra

  mv "$srcdir/compiler-rt-$pkgver.src" projects/compiler-rt

  mv "$srcdir/lldb-$pkgver.src" tools/lldb

  mv "$srcdir/lld-$pkgver.src" tools/lld

  mv "$srcdir/openmp-$pkgver.src" tools/openmp

  # Backport LLVM_LINK_LLVM_DYLIB option
  # https://bugs.archlinux.org/task/46392
  patch -Np1 -i ../llvm-3.7.0-link-tools-against-libLLVM.patch

  # https://llvm.org/bugs/show_bug.cgi?id=24157
  patch -Np2 -i ../llvm-3.7.0-export-more-symbols.patch

  # https://llvm.org/bugs/show_bug.cgi?id=24046
  # Upstreamed - http://reviews.llvm.org/D13206
  patch -d tools/clang/tools/extra -Np1 <../clang-tools-extra-3.7.0-install-clang-query.patch

  # https://llvm.org/bugs/show_bug.cgi?id=24953
  patch -d tools/lldb -Np1 <../lldb-3.7.0-avoid-linking-to-libLLVM.patch

  # Use Python 2
  find tools/lldb -name Makefile -exec gsed -i 's/python-config/python2-config/' {} +
  gsed -i 's|/usr/bin/env python|&2|' \
    tools/lldb/scripts/Python/{build-swig-Python,finish-swig-Python-LLDB}.sh

  mkdir build
}

build() {
  cd "$srcdir/llvm-$pkgver.src/build"

  cmake \
	-DBUILD_SHARED_LIBS=ON \
	-DCLANG_DEFAULT_OPENMP_RUNTIME=libomp \
	-DLLVM_ENABLE_SPHINX=ON \
	-DSPHINX_WARNINGS_AS_ERRORS=OFF \
	-DLLVM_BUILD_DOCS=ON \
	-DLLVM_BINUTILS_INCDIR=/usr/local/include \
	-DCMAKE_C_COMPILER:STRING="cc" \
	-DCMAKE_CXX_COMPILER:STRING="c++" \
	-DCMAKE_C_FLAGS:STRING="-O2 -pipe  -isystem /usr/local/include -fstack-protector -fno-strict-aliasing" \
	-DCMAKE_C_FLAGS_DEBUG:STRING="-O2 -pipe  -isystem /usr/local/include -fstack-protector -fno-strict-aliasing" \
	-DCMAKE_C_FLAGS_RELEASE:STRING="-O2 -pipe  -isystem /usr/local/include -fstack-protector -fno-strict-aliasing" \
	-DCMAKE_CXX_FLAGS:STRING="-O2 -pipe -isystem /usr/local/include -fstack-protector -fno-strict-aliasing  -isystem /usr/local/include" \
	-DCMAKE_CXX_FLAGS_DEBUG:STRING="-O2 -pipe -isystem /usr/local/include -fstack-protector -fno-strict-aliasing  -isystem /usr/local/include" \
	-DCMAKE_CXX_FLAGS_RELEASE:STRING="-O2 -pipe -isystem /usr/local/include -fstack-protector -fno-strict-aliasing  -isystem /usr/local/include" \
	-DCMAKE_EXE_LINKER_FLAGS:STRING=" -L/usr/local/lib -fstack-protector"  \
	-DCMAKE_MODULE_LINKER_FLAGS:STRING=" -L/usr/local/lib -fstack-protector" \
	-DCMAKE_SHARED_LINKER_FLAGS:STRING=" -L/usr/local/lib -fstack-protector" \
	-DCMAKE_BUILD_TYPE:STRING="Release"  -DTHREADS_HAVE_PTHREAD_ARG:BOOL=YES \
	-DCMAKE_INSTALL_RPATH_USE_LINK_PATH=YES \
	-DFFI_INCLUDE_DIR=$(pkg-config --cflags-only-I libffi | cut -c3-) \
	-GNinja ..

  ninja

}

package_llvm() {
  pkgdesc="Low Level Virtual Machine"
  depends=("llvm-libs=$pkgver-$pkgrel" 'perl' 'python2' 'binutils')

  cd "$srcdir/llvm-$pkgver.src"

  DESTDIR="$pkgdir" ninja -C build install

  # Remove documentation sources
  rm -r "$pkgdir"/usr/local/share/doc/$pkgname/html/{_sources,.buildinfo}

  # The runtime libraries go into llvm-libs
  mkdir "$srcdir/libs"
  mv -f "$pkgdir"/usr/local/lib/*.so* "$srcdir/libs/"

  # OCaml bindings go to a separate package
  rm -rf "$srcdir"/ocaml.{lib,doc}
  rm -rf "${pkgdir}"/usr/local/man/man1/

  if [[ $CARCH == amd64 ]]; then
    # Needed for multilib (https://bugs.archlinux.org/task/29951)
    # Header stub is taken from Fedora
    mv "$pkgdir/usr/local/include/llvm/Config/llvm-config"{,-64}.h
    cp "$srcdir/llvm-Config-llvm-config.h" \
      "$pkgdir/usr/local/include/llvm/Config/llvm-config.h"
  fi

  install -dm755 "$pkgdir/usr/share/licenses/$pkgname"
  install -m644 LICENSE.TXT "$pkgdir/usr/share/licenses/$pkgname/LICENSE"

}

package_llvm-libs() {
  pkgdesc="Low Level Virtual Machine (runtime libraries)"
  depends=('gcc-libs' 'zlib' 'libffi' 'ncurses' 'python2')

  install -d "$pkgdir/usr/local/lib"
  cp -P \
    "$srcdir"/libs/* \
    "$pkgdir/usr/local/lib/"

  rm "${pkgdir}"/usr/local/lib/libgomp.so
  install -dm755 "$pkgdir/usr/share/licenses/$pkgname"
  install -m644 "$srcdir/llvm-$pkgver.src/LICENSE.TXT" \
    "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
}
