# $Id: PKGBUILD 212366 2014-05-14 06:58:53Z foutrelis $
# Maintainer: Evangelos Foutras <evangelos@foutrelis.com>
# Contributor: Jan "heftig" Steffens <jan.steffens@gmail.com>
# Contributor: Sebastian Nowicki <sebnow@gmail.com>
# Contributor: Devin Cofer <ranguvar{AT]archlinux[DOT}us>
# Contributor: Tobias Kieslich <tobias@justdreams.de>
# Contributor: Geoffroy Carrier <geoffroy.carrier@aur.archlinux.org>
# Contributor: Tomas Lindquist Olsen <tomas@famolsen.dk>
# Contributor: Roberto Alsina <ralsina@kde.org>
# Contributor: Gerardo Exequiel Pozzi <vmlinuz386@yahoo.com.ar>

pkgname=('llvm' 'llvm-libs' 'llvm-ocaml' 'libclang' 'clang-analyzer'
         'clang-tools-extra')
pkgver=3.4.1
_base_ver=3.4
pkgrel=8
arch=('i686' 'x86_64')
url="http://llvm.org/"
license=('custom:University of Illinois/NCSA Open Source License')
makedepends=('libffi' 'python2' 'ocaml' 'python-sphinx')
options=('staticlibs' 'clang')
source=(http://llvm.org/releases/$pkgver/llvm-$pkgver.src.tar.gz{,.sig}
        http://llvm.org/releases/$pkgver/cfe-$pkgver.src.tar.gz{,.sig}
        http://llvm.org/releases/$_base_ver/clang-tools-extra-$_base_ver.src.tar.gz{,.sig}
        http://llvm.org/releases/$_base_ver/compiler-rt-$_base_ver.src.tar.gz{,.sig}
        clang-3.4-max_align_t.patch
        clang-3.4-fstack-protector-strong.patch
        llvm-3.4-provide-cmake-modules.patch
        llvm-Config-config.h
        llvm-Config-llvm-config.h)
sha256sums=('7d28bb6eca243a2bb6d65a05743ab915b57958a7770277364e93534b63eef93a'
            'SKIP'
            'ab83f30951b34d75729026e0e73c180a728a140f2a02cbb8915805051a9d6bb7'
            'SKIP'
            'ba85187551ae97fe1c8ab569903beae5ff0900e21233e5eb5389f6ceab1028b4'
            'SKIP'
            'f37c89b1383ce462d47537a0245ac798600887a9be9f63073e16b79ed536ab5c'
            'SKIP'
            '0f0cbff69af54e83383385abbdeb1fee23e6e69427f8530060c492c0b07c2bbe'
            '7a2a1ddc94f67e643c1ab74601ec07deb6d5d344d4b19ed17c900afb2f6f2863'
            'b6bb154d5ec998328e818bb09acfc6229e41367ba45cea7cc5b2dd2a7c835cf5'
            'ed42ffef32849b977916cb0c27c8a149edad5a8a2f5484a0c5020d00c2f0d116'
            '8b99d178ec141104a32410d0f97d4b282176c335b826eae4c8d3408c77175502')

prepare() {
	# Change directory names to release names so we don't need to change the
	# whole PKGBUILD
	mv llvm-$pkgver{.src,}
	mv cfe-$pkgver.src clang-$pkgver

	cd "$srcdir/llvm-$pkgver"

	# At the present, clang must reside inside the LLVM source code tree to build
	# See http://llvm.org/bugs/show_bug.cgi?id=4840
	mv "$srcdir/clang-$pkgver" tools/clang

	mv "$srcdir/clang-tools-extra-$_base_ver" tools/clang/tools/extra

	mv "$srcdir/compiler-rt-$_base_ver" projects/compiler-rt

	# Fix docs installation directory
	gsed -i 's:\$(PROJ_prefix)/docs/llvm:$(PROJ_prefix)/share/doc/llvm:' \
		Makefile.config.in

	# Teach Clang to provide ::max_align_t in C11 and C++11 modes (FS#40229)
	# http://reviews.llvm.org/rL201729
	patch -d tools/clang -Np0 -i "$srcdir/clang-3.4-max_align_t.patch"

	# Add command line option -fstack-protector-strong
	# http://reviews.llvm.org/rL201120
	patch -d tools/clang -Np0 -i "$srcdir/clang-3.4-fstack-protector-strong.patch"

	# Provide CMake modules (FS#38705)
	# http://reviews.llvm.org/rL201047
	# http://reviews.llvm.org/rL201048
	# http://reviews.llvm.org/rL201053
	patch -Np0 -i "$srcdir/llvm-3.4-provide-cmake-modules.patch"
}

build() {
	cd "$srcdir/llvm-$pkgver"

	# Apply strip option to configure
	_optimized_switch="enable"
	[[ $(check_option strip) == n ]] && _optimized_switch="disable"

	# Include location of libffi headers in CPPFLAGS
	CPPFLAGS+=" $(pkg-config --cflags libffi)"

	./configure \
		--prefix=/usr \
		--sysconfdir=/etc \
		--enable-shared \
		--enable-libffi \
		--disable-expensive-checks \
		--enable-targets=all \
		--disable-debug-runtime \
		--disable-assertions \
		--with-python=/usr/bin/python2 \
		--$_optimized_switch-optimized 

	gmake
	gmake -C docs -f Makefile.sphinx man
	gmake -C docs -f Makefile.sphinx html
	gmake -C tools/clang/docs -f Makefile.sphinx html
}

package_llvm() {
	pkgdesc="Low Level Virtual Machine"
	depends=("llvm-libs=$pkgver" 'perl')

	cd "$srcdir/llvm-$pkgver"

	# We move the clang directory out of the tree so it won't get installed and
	# then we bring it back in for the clang package
	mv tools/clang "$srcdir"

	# -j1 is due to race conditions during the installation of the OCaml bindings
	gmake -j1 DESTDIR="$pkgdir" install
	mv "$srcdir/clang" tools

	# The runtime library goes into llvm-libs
	mv "$pkgdir/usr/lib/libLLVM-$pkgver.so" "$srcdir"
	rm "$pkgdir/usr/lib/libLLVM-$_base_ver.so"

	# OCaml bindings go to a separate package
	rm -rf "$srcdir"/{ocaml,ocamldoc}
	mv "$pkgdir"/usr/{lib/ocaml,share/doc/llvm/ocamldoc} "$srcdir"

	# Remove duplicate files installed by the OCaml bindings
	rm "$pkgdir"/usr/{lib/libllvm*,share/doc/llvm/ocamldoc.tar.gz}

	# Fix permissions of static libs
	chmod -x "$pkgdir"/usr/lib/*.a

	# Get rid of example Hello transformation
	rm "$pkgdir"/usr/lib/*LLVMHello.*

	if [[ $CARCH == x86_64 ]]; then
		# Needed for multilib (https://bugs.archlinux.org/task/29951)
		# Header stubs are taken from Fedora
		for _header in config llvm-config; do
			mv "$pkgdir/usr/include/llvm/Config/$_header"{,-64}.h
			cp "$srcdir/llvm-Config-$_header.h" \
				"$pkgdir/usr/include/llvm/Config/$_header.h"
		done
	fi

	# Install man pages
	install -d "$pkgdir/usr/share/man/man1"
	cp docs/_build/man/*.1 "$pkgdir/usr/share/man/man1/"

	# Install html docs
	cp -r docs/_build/html/* "$pkgdir/usr/share/doc/$pkgname/html/"
	rm -r "$pkgdir/usr/share/doc/$pkgname/html/_sources"

	install -dm755 "$pkgdir/usr/share/licenses/$pkgname"
	install -m644 LICENSE.TXT "$pkgdir/usr/share/licenses/$pkgname/LICENSE"

	# ArchBSD related conflicts:
	# tblgen: provided by freebsd-world; for some reason it only installs the manpage though...
	rm "${pkgdir}/usr/share/man/man1/tblgen.1"

}

package_llvm-libs() {
	pkgdesc="Low Level Virtual Machine (runtime library)"
	depends=('gcc-libs' 'zlib' 'libffi' 'ncurses')

	install -dm755 "$pkgdir/usr/lib"
	install "$srcdir/libLLVM-$pkgver.so" "$pkgdir/usr/lib/libLLVM-$pkgver.so"
	ln -s libLLVM-$pkgver.so "$pkgdir/usr/lib/libLLVM-$_base_ver.so"

	install -dm755 "$pkgdir/usr/share/licenses/$pkgname"
	install -m644 "$srcdir/llvm-$pkgver/LICENSE.TXT" \
		"$pkgdir/usr/share/licenses/$pkgname/LICENSE"
}

package_llvm-ocaml() {
	pkgdesc="OCaml bindings for LLVM"
	depends=("llvm=$pkgver" 'ocaml')

	cd "$srcdir/llvm-$pkgver"

	install -d "$pkgdir"/{usr/lib,usr/share/doc/llvm}
	cp -RP "$srcdir/ocaml" "$pkgdir/usr/lib"
	cp -RP "$srcdir/ocamldoc" "$pkgdir/usr/share/doc/llvm"

	# Remove execute bit from static libraries
	chmod -x "$pkgdir"/usr/lib/ocaml/libllvm*.a

	install -dm755 "$pkgdir/usr/share/licenses/$pkgname"
	install -m644 LICENSE.TXT "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
}

package_libclang() {
	pkgdesc="C language family frontend for LLVM"
	url="http://clang.llvm.org/"
	depends=("llvm=$pkgver" 'gcc')
	options=(!emptydirs)
	# Fix installation path for clang docs
	gsed -i 's:$(PROJ_prefix)/share/doc/llvm:$(PROJ_prefix)/share/doc/clang:' \
		"$srcdir/llvm-$pkgver/Makefile.config"

	cd "$srcdir/llvm-$pkgver/tools/clang"

	# We move the extra tools directory out of the tree so it won't get
	# installed and then we bring it back in for the clang-tools-extra package
	mv tools/extra "$srcdir"

	gmake DESTDIR="$pkgdir" install
	mv "$srcdir/extra" tools/

	rm -r "${pkgdir}"/usr/bin
	rm -r "${pkgdir}/usr/include" "${pkgdir}/usr/lib/clang"
	# Fix permissions of static libs
	chmod -x "$pkgdir"/usr/lib/*.a

	# Revert the path change in case we want to do a repackage later
	gsed -i 's:$(PROJ_prefix)/share/doc/clang:$(PROJ_prefix)/share/doc/llvm:' \
		"$srcdir/llvm-$pkgver/Makefile.config"


	# Install Python bindings
	install -d "$pkgdir/usr/lib/python2.7/site-packages"
	cp -r bindings/python/clang "$pkgdir/usr/lib/python2.7/site-packages/"
	python2 -m compileall "$pkgdir/usr/lib/python2.7/site-packages/clang"
	python2 -O -m compileall "$pkgdir/usr/lib/python2.7/site-packages/clang"

	install -dm755 "$pkgdir/usr/share/licenses/$pkgname"
	install -m644 LICENSE.TXT "$pkgdir/usr/share/licenses/$pkgname/LICENSE"

	rm "${pkgdir}/usr/share/man/man1/clang.1"
}

package_clang-analyzer() {
	pkgdesc="A source code analysis framework"
	url="http://clang-analyzer.llvm.org/"
	depends=("clang=$pkgver" 'python2')

	cd "$srcdir/llvm-$pkgver/tools/clang"

	install -d "$pkgdir"/usr/{bin,lib/clang-analyzer}
	for _tool in scan-{build,view}; do
		cp -r tools/$_tool "$pkgdir/usr/lib/clang-analyzer/"
		ln -s /usr/lib/clang-analyzer/$_tool/$_tool "$pkgdir/usr/bin/"
	done

	# scan-build looks for clang within the same directory
	ln -s /usr/bin/clang "$pkgdir/usr/lib/clang-analyzer/scan-build/"

	# Relocate man page
	install -d "$pkgdir/usr/share/man/man1"
	mv "$pkgdir/usr/lib/clang-analyzer/scan-build/scan-build.1" \
		"$pkgdir/usr/share/man/man1/"

	# Use Python 2
	gsed -i \
		-e 's|env python$|&2|' \
		-e 's|/usr/bin/python$|&2|' \
		"$pkgdir/usr/lib/clang-analyzer/scan-view/scan-view" \
		"$pkgdir/usr/lib/clang-analyzer/scan-build/set-xcode-analyzer"

	# Compile Python scripts
	python2 -m compileall "$pkgdir/usr/lib/clang-analyzer"
	python2 -O -m compileall "$pkgdir/usr/lib/clang-analyzer"

	install -dm755 "$pkgdir/usr/share/licenses/$pkgname"
	install -m644 LICENSE.TXT "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
}

package_clang-tools-extra() {
	pkgdesc="Extra tools built using Clang's tooling APIs"
	url="http://clang.llvm.org/"
	depends=("clang=$pkgver")

	cd "$srcdir/llvm-$pkgver/tools/clang/tools/extra"

	gmake DESTDIR="$pkgdir" install

	# Fix permissions of static libs
	chmod -x "$pkgdir"/usr/lib/*.a

	install -dm755 "$pkgdir/usr/share/licenses/$pkgname"
	install -m644 LICENSE.TXT "$pkgdir/usr/share/licenses/$pkgname/LICENSE"
}

# vim:set ts=2 sw=2 et:
