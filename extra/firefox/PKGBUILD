# Maintainer : Ionut Biru <ibiru@archlinux.org>
# Contributor: Jakub Schmidtke <sjakub@gmail.com>

pkgname=firefox
pkgver=32.0
pkgrel=2
pkgdesc="Standalone web browser from mozilla.org"
arch=('i686' 'x86_64')
license=('MPL' 'GPL' 'LGPL')
depends=('gtk2' 'mozilla-common' 'libxt' 'startup-notification' 'mime-types'
         'dbus-glib' 'alsa-lib' 'libvpx' 'libevent' 'nss>=3.15.1' 'hunspell' 'sqlite'
          'libnotify' 'desktop-file-utils' 'hicolor-icon-theme' 'libv4l' 'opus' 'v4l-compat')
makedepends=('unzip' 'zip' 'python2' 'yasm' 'mesa' 'imake' 'gstreamer0.10' 'gstreamer0.10-base'
             'xorg-server-xvfb' 'dos2unix' 'libidl2' 'autoconf2.13' 'gstreamer0.10-base-plugins xorg-xauth'
             'llvm') # llvm for PGO / libprofile_rt.a
optdepends=('networkmanager: Location detection via available WiFi networks')
url="http://www.mozilla.org/projects/firefox"
install=firefox.install
options=(!fbsd10fix !emptydirs clang)
patchoptions="-p0 -l"
patchdir=(${srcdir}/mozilla-release/)
source=(http://ftp.mozilla.org/pub/mozilla.org/firefox/releases/$pkgver/source/firefox-$pkgver.source.tar.bz2
        mozconfig firefox.desktop vendor.js
        firefox-install-dir.patch
)
sha1sums=('5cb7644af9741ebcdb3a21b777362913908c8f41'
          '65afa253aa3bf2534968e666b8cb89e0c4a6c4b9'
          '27a7cd91a9faac2d2b07d729cd0fb3a2d5243629'
          '7739fbea2838cb9148a1d77090ace46eeb397f79'
          'db2d93a36184cc8e2edd4149052da382b5b43bfd')

_google_api_key=AIzaSyAO345WIdLIfX0L1hR-dNVVZHrblLkQGpU

prepare() {
  cd mozilla-release
  gsed -i -e 's/$'"/`echo \\\r`/" media/webrtc/trunk/webrtc/system_wrappers/source/spreadsortlib/spreadsort.hpp

  cp ../mozconfig .mozconfig

  msg "sed mozpng"
  sed -i '' -e '/MOZPNG/s/=[0-9]*/=10511/' configure.in
  msg "preparing"

  echo -n "$_google_api_key" >google-api-key
  echo "ac_add_options --with-google-api-keyfile=\"$PWD/google-api-key\"" >>.mozconfig

  [[ ! -d "$srcdir/path" ]] && mkdir "$srcdir/path"

  # WebRTC build tries to execute "python" and expects Python 2
  [[ ! -e "$srcdir/path/python" ]] && ln -s /usr/bin/python2 "$srcdir/path/python"

  ## otherwise we get undefined references to environ...
  ## and mozpng sed must be applied

  for f in \
      directory/c-sdk/config/FreeBSD.mk \
      directory/c-sdk/configure \
      security/coreconf/FreeBSD.mk \
      js/src/Makefile.in \
      js/src/configure \
      configure; do \
    if [[ -f "$f" ]] ; then
      sed -i '' -e 's|echo aout|echo elf|g' "$f"
    fi
  done

  # configure script misdetects the preprocessor without an optimization level
  # https://bugs.archlinux.org/task/34644
  gsed -i '/ac_cpp=/s/$CPPFLAGS/& -O2/' configure
  autoconf-2.13
  cd js/src/ && autoconf-2.13
  cd ../../

  fbsd10fix

  # some last minute code fixes
  sed -i '' -e 's@include "\(audio_device_utility_linux.h\)"@include "linux/\1"@' \
    media/webrtc/trunk/webrtc/modules/audio_device/audio_device_impl.cc
  # problems with _Unwind_Backtrace
  sed -i '' -e 's@#elif HAVE_DLADDR @#elif 0 @' \
    xpcom/base/nsStackWalk.cpp

  # remember ipc/app/{Makefile,backend.mk} get deleted after the first build...
  # keep them somewhere nice...
}

build() {
  cd mozilla-release

  # doesn't get set when using noextract
  export PATH="$srcdir/path:$PATH"
  export LDFLAGS="$LDFLAGS -Wl,-rpath,/usr/lib/firefox"
  export PYTHON="/usr/bin/python2"
  export LIBS="$LIBS -pthread"

  #export CFLAGS="$CFLAGS -fPIC"
  #export CXXFLAGS="$CXXFLAGS -fPIC"

  # Do PGO
  xvfb-run -a -s "-extension GLX -screen 0 1280x1024x24" \
    gmake -j1 -f client.mk build

#  export DISPLAY=:99
#  Xvfb -nolisten tcp -extension GLX -screen 0 1280x1024x24 $DISPLAY &
#
#  if ! gmake -f client.mk build; then
#    kill $!
#    return 1
#  fi

#  kill $! || true
}

package() {
  cd mozilla-release
  gmake -j1 -f client.mk DESTDIR="$pkgdir" install
  msg "REST"

  install -dm755 "$pkgdir/usr/lib/firefox/defaults/preferences/"
  install -m644 ../vendor.js "$pkgdir/usr/lib/firefox/defaults/preferences/vendor.js"

  for i in 16 22 24 32 48 256; do
      install -dm755 "$pkgdir/usr/share/icons/hicolor/${i}x${i}/apps/"
      install -m644 browser/branding/official/default$i.png \
        "$pkgdir/usr/share/icons/hicolor/${i}x${i}/apps/firefox.png"
  done
  install -dm755 "$pkgdir/usr/share/icons/hicolor/64x64/apps"
  install -dm755 "$pkgdir/usr/share/icons/hicolor/128x128/apps"
  install -dm755 "$pkgdir/usr/share/icons/hicolor/210x210/apps"
  install -m644 browser/branding/official/content/icon64.png \
    "$pkgdir/usr/share/icons/hicolor/64x64/apps/firefox.png"
  install -m644 browser/branding/official/mozicon128.png \
    "$pkgdir/usr/share/icons/hicolor/128x128/apps/firefox.png"
  install -m644 browser/branding/official/content/about-logo.png \
    "$pkgdir/usr/share/icons/hicolor/210x210/apps/firefox.png"

  install -dm755 "$pkgdir/usr/share/applications/"
  install -m644 ../firefox.desktop \
    "$pkgdir/usr/share/applications/firefox.desktop"

  # Use system-provided dictionaries
  rm -rf "$pkgdir"/usr/lib/firefox/{dictionaries,hyphenation}
  ln -s /usr/share/hunspell "$pkgdir/usr/lib/firefox/dictionaries"
  ln -s /usr/share/hyphen "$pkgdir/usr/lib/firefox/hyphenation"

  # We don't want the development stuff
  #rm -r "$pkgdir"/usr/{include,lib/firefox-devel,share/idl}

  #workaround for now
  #https://bugzilla.mozilla.org/show_bug.cgi?id=658850
  ln -sf firefox "$pkgdir/usr/lib/firefox/firefox-bin"
}
