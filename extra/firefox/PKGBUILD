# Maintainer : Ionut Biru <ibiru@archlinux.org>
# Contributor: Jakub Schmidtke <sjakub@gmail.com>

pkgname=firefox
pkgver=27.0.1
pkgrel=1
pkgdesc="Standalone web browser from mozilla.org"
arch=('i686' 'x86_64')
license=('MPL' 'GPL' 'LGPL')
depends=('gtk2' 'mozilla-common' 'libxt' 'startup-notification' 'mime-types'
         'dbus-glib' 'alsa-lib' 'libvpx' 'libevent' 'nss>=3.15.1' 'hunspell' 'sqlite'
          'libnotify' 'desktop-file-utils' 'hicolor-icon-theme' 'libv4l')
makedepends=('unzip' 'zip' 'python2' 'yasm' 'mesa' 'imake' 'gstreamer0.10' 'gstreamer0.10-base'
             'xorg-server-xvfb' 'dos2unix' 'libidl2' 'autoconf2.13' 'gstreamer0.10-base-plugins')
optdepends=('networkmanager: Location detection via available WiFi networks')
url="http://www.mozilla.org/projects/firefox"
install=firefox.install
options=(!fbsd10fix !emptydirs clang)
_port_patches=(
	patch-browser-app-nsBrowserApp.cpp
	patch-bug783463
	patch-bug791305
	patch-bug810716
	patch-bug826985
	patch-bug878791
	#patch-bug893397
	patch-bug916589
	patch-bug945046
	patch-bug946560
	patch-bug948946
	patch-build-pgo-profileserver.py
	patch-clang32-libc++-visibility-hack
	patch-duckduckgo
	patch-extensions-spellcheck-hunspell-src-mozHunspell.cpp
	patch-toolkit_xre_Makefile.in
	patch-ipc-chromium-Makefile.in
	patch-ipc-chromium-src-base-message_pump_libevent.cc
	patch-media-webrtc-trunk-src-system_wrappers-source-spreadsortlib-spreadsort.hpp
	patch-no-videoio.h
	patch-security_manager_ssl_src_nsNSSComponent.cpp
	patch-toolkit_mozapps_installer_packager_mk
)
source=(https://ftp.mozilla.org/pub/mozilla.org/firefox/releases/$pkgver/source/firefox-$pkgver.source.tar.bz2
        mozconfig firefox.desktop vendor.js
        firefox-install-dir.patch
        firefox-20.0.1-fixed-loading-icon.png
        "${_port_patches[@]}"
)

_google_api_key=AIzaSyAO345WIdLIfX0L1hR-dNVVZHrblLkQGpU

prepare() {
  cd mozilla-release
  dos2unix media/webrtc/trunk/webrtc/system_wrappers/source/spreadsortlib/spreadsort.hpp

  cp ../mozconfig .mozconfig
  patch -Np1 -i ../firefox-install-dir.patch

  for i in "${_port_patches[@]}"; do
    msg "Patch $i"
    patch -p0 -i "${srcdir}/$i"
  done
  msg "Patching done"

  msg "sed mozpng"
  sed -i '' -e '/MOZPNG/s/=[0-9]*/=10511/' configure.in
  msg "preparing"

  # Fix PRE_RELEASE_SUFFIX
  gsed -i '/^PRE_RELEASE_SUFFIX := ""/s/ ""//' \
    browser/base/Makefile.in

  echo -n "$_google_api_key" >google-api-key
  echo "ac_add_options --with-google-api-keyfile=\"$PWD/google-api-key\"" >>.mozconfig

  mkdir "$srcdir/path"

  # WebRTC build tries to execute "python" and expects Python 2
  ln -s /usr/bin/python2 "$srcdir/path/python"

  ## otherwise we get undefined references to environ...
  ## and mozpng sed must be applied
  autoconf-2.13
  cd js/src
  autoconf-2.13
  cd ../..

  for f in \
      directory/c-sdk/config/FreeBSD.mk \
      directory/c-sdk/configure \
      security/coreconf/FreeBSD.mk \
      js/src/Makefile.in \
      js/src/configure \
      configure; do \
    if [[ -f "$f" ]] ; then
      sed -i '' -e 's|echo aout|echo elf|g' "$f"
    fi
  done

  # configure script misdetects the preprocessor without an optimization level
  # https://bugs.archlinux.org/task/34644
  gsed -i '/ac_cpp=/s/$CPPFLAGS/& -O2/' configure

  fbsd10fix

  # some last minute code fixes
  sed -i '' -e 's@include "\(audio_device_utility_linux.h\)"@include "linux/\1"@' \
    media/webrtc/trunk/webrtc/modules/audio_device/audio_device_impl.cc
  # problems with _Unwind_Backtrace
  sed -i '' -e 's@#elif HAVE_DLADDR @#elif 0 @' \
    xpcom/base/nsStackWalk.cpp

  # remember ipc/app/{Makefile,backend.mk} get deleted after the first build...
  # keep them somewhere nice...
}

build() {
  cd mozilla-release

  export PATH="$srcdir/path:$PATH"
  export LDFLAGS="$LDFLAGS -Wl,-rpath,/usr/lib/firefox"
  export PYTHON="/usr/bin/python2"
  export LIBS="$LIBS -lpthread"

  #export CFLAGS="$CFLAGS -fPIC"
  #export CXXFLAGS="$CXXFLAGS -fPIC"

  export DISPLAY=:99
  Xvfb -nolisten tcp -extension GLX -screen 0 1280x1024x24 $DISPLAY &

  if ! gmake -f client.mk build; then
    kill $!
    return 1
  fi

  kill $! || true
}

package() {
  cd mozilla-release
  gmake -j1 -f client.mk DESTDIR="$pkgdir" install
  msg "REST"

  install -dm755 "$pkgdir/usr/lib/firefox/defaults/preferences/"
  install -m644 ../vendor.js "$pkgdir/usr/lib/firefox/defaults/preferences/vendor.js"

  for i in 16 22 24 32 48 256; do
      install -dm755 "$pkgdir/usr/share/icons/hicolor/${i}x${i}/apps/"
      install -m644 browser/branding/official/default$i.png \
        "$pkgdir/usr/share/icons/hicolor/${i}x${i}/apps/firefox.png"
  done
  install -dm755 "$pkgdir/usr/share/icons/hicolor/64x64/apps"
  install -dm755 "$pkgdir/usr/share/icons/hicolor/128x128/apps"
  install -dm755 "$pkgdir/usr/share/icons/hicolor/210x210/apps"
  install -m644 browser/branding/official/content/icon64.png \
    "$pkgdir/usr/share/icons/hicolor/64x64/apps/firefox.png"
  install -m644 browser/branding/official/mozicon128.png \
    "$pkgdir/usr/share/icons/hicolor/128x128/apps/firefox.png"
  install -m644 browser/branding/official/content/about-logo.png \
    "$pkgdir/usr/share/icons/hicolor/210x210/apps/firefox.png"

  install -dm755 "$pkgdir/usr/share/applications/"
  install -m644 ../firefox.desktop \
    "$pkgdir/usr/share/applications/firefox.desktop"

  # Use system-provided dictionaries
  rm -rf "$pkgdir"/usr/lib/firefox/{dictionaries,hyphenation}
  ln -s /usr/share/hunspell "$pkgdir/usr/lib/firefox/dictionaries"
  ln -s /usr/share/hyphen "$pkgdir/usr/lib/firefox/hyphenation"

  # We don't want the development stuff
  #rm -r "$pkgdir"/usr/{include,lib/firefox-devel,share/idl}

  #workaround for now
  #https://bugzilla.mozilla.org/show_bug.cgi?id=658850
  ln -sf firefox "$pkgdir/usr/lib/firefox/firefox-bin"
}

md5sums=('c8feb2c55294aa679e8755ac24844933'
         'd72709cc918454d11794ff6726e611ac'
         'd0773ae2d2b32143d028a49ebe8fb1d1'
         '0d053487907de4376d67d8f499c5502b'
         '17c73d68b62be145792e3eb7a55dd1c6'
         '6e335a517c68488941340ee1c23f97b0'
         '38af38098051cb5ecb24535297ffe30b'
         'ef0be9053db20b110c5c6faa2bcfea2d'
         '2b87e42a3d9fefa812f9d2799d61afd6'
         'a0421e160d425bdaedd154a4a683303f'
         '8745541818ee914dc6824a78cbcba533'
         'edd5f43a1a55b2393983190465f3beef'
         '6fd733d26883ae378ad06f86fe0fd862'
         '8aec47485930504e5d12941bae869a1f'
         '8e7abe68e7d7e04536b78cd2ddf77a85'
         '82f0851b879bc052fe908bab90c0df00'
         'bcc693d593b8d33fe9286b4ebcca4b6d'
         'b6fcd64840088c25e51746c9f9c4681c'
         '2dd311f1e82c246f935c6d5118f8d2bd'
         '24925c94aed511f9c34605d47ed81643'
         'cf7230ffe380e8f9748fd78d976f3f19'
         '1c85f1aa3ce4f114531ce79270fbbe59'
         '5b01fd680ff878eaf8bedab84c696778'
         '341287aa1220fb836296d031cfad11e5'
         'c07940c272cbe5e4b75397fc2f6cd631'
         '0f507094a1ed60e7cb2e721bce78d813'
         'ef23be40121ebb95970cdea623bffc13')
