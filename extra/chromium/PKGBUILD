# Maintainer: Evangelos Foutras <evangelos@foutrelis.com>
# Contributor: Pierre Schmitz <pierre@archlinux.de>
# Contributor: Jan "heftig" Steffens <jan.steffens@gmail.com>
# Contributor: Daniel J Griffiths <ghost1227@archlinux.us>

pkgname=chromium
pkgver=37.0.2062.120
pkgrel=1
pkgdesc="The open-source project behind Google Chrome, an attempt at creating a safer, faster, and more stable browser"
arch=('i686' 'x86_64')
url="http://www.chromium.org/"
license=('BSD')
# Adding alsa-plugins as it is required for things like youtube-html5 player to even start playing at all
depends=('libxml2' 'libxslt' 'alsa-plugins' 'libcups'
         'gtk2' 'nss' 'alsa-lib' 'xdg-utils' 'libevent' 'libxss'
         'libgcrypt' 'ttf-font' 'dbus' 'flac' 'snappy'
         'speech-dispatcher' 'pciutils' 'libpulse' 'harfbuzz'
         'desktop-file-utils' 'hicolor-icon-theme' 'libexif')
makedepends=('python2' 'perl' 'gperf' 'yasm' 'mesa' 'libgnome-keyring'
             'flock' 'v4l-compat>=1.0.20110603' 'subversion'
             'ninja')
[[ $CARCH = x86_64 ]] && makedepends+=('lib32-gcc-libs' 'lib32-zlib')
optdepends=('kdebase-kdialog: needed for file dialogs in KDE'
            'gnome-keyring: for storing passwords in GNOME keyring'
            'libgnome-keyring: for storing passwords in GNOME keyring')
backup=('etc/chromium/default')
install=chromium.install
options=('!fbsd10fix')
patchdir="$srcdir/chromium-$pkgver/"
source=(http://commondatastorage.googleapis.com/chromium-browser-official/$pkgname-$pkgver.tar.xz
        chromium.desktop
        chromium.default
        chromium.sh)
md5sums=('733541eb61e2625900173462eabfe203'
         '075c3c2fa5902e16b8547dd31d437191'
         '001a472621cace5c2e140df95c632af1'
         '259b72382dbcc85738346eebf0fe3528')

# Google API keys (see http://www.chromium.org/developers/how-tos/api-keys)
# Note: These are for ArchBSD use ONLY. For your own distribution, please
# get your own set of keys.
_google_api_key=AIzaSyAO345WIdLIfX0L1hR-dNVVZHrblLkQGpU
_google_default_client_id=531973043889.apps.googleusercontent.com
_google_default_client_secret=Yifd-ZumGRmiFWqVSfedScv8

prepare() {
  cd "$srcdir/chromium-$pkgver"

  #sed -i '' -e "s|'../courgette/courgette.gyp:courgette_lib',||" \
  #  chrome/chrome_tests_unit.gypi

  #sed -i '' -e "s|linux|freebsd|" \
  #  tools/gyp/pylib/gyp/generator/make.py

  #sed -i '' -e "s|is_linux|(is_linux or is_bsd)|" \
  #  chrome/browser/browser_resources.grd \
  #  chrome/app/theme/theme_resources.grd \
  #  tools/grit/grit/xtb_reader_unittest.py \
  #  ui/base/strings/app_locale_settings.grd \
  #  ui/base/strings/app_locale_settings_bn.xtb \
  #  ui/base/strings/app_locale_settings_ja.xtb \
  #  ui/base/strings/app_locale_settings_ko.xtb \
  #  ui/base/strings/app_locale_settings_ml.xtb \
  #  ui/base/strings/app_locale_settings_th.xtb

  # Use Python 2
  find . -type f -exec gsed -i -r \
    -e 's|/usr/bin/python$|&2|g' \
    -e 's|(/usr/bin/python2)\.4$|\1|g' \
    {} +

  # There are still a lot of relative calls which need a workaround
  mkdir "$srcdir/python2-path"
  ln -s /usr/bin/python2 "$srcdir/python2-path/python"

  # port seds
  cd "$srcdir/chromium-$pkgver"
  sed -i '' -e 's|/usr/local|/usr|' \
    crypto/crypto.gyp \
    v8/tools/gyp/v8.gyp \
    v8/build/toolchain.gypi
  sed -i '' -e "s|/usr/local|/usr|" \
    chrome/common/chrome_paths.cc \
    base/base.gyp
  sed -i '' -e "s|/usr/bin/gcc|/usr/bin/clang|" \
    third_party/WebKit/Source/build/scripts/preprocessor.pm \
    third_party/WebKit/Source/build/scripts/scripts.gypi
  sed -i '' -e "s|g++|clang++|" \
    tools/compile_test/compile_test.py
  # clang 3.4 doesn't support this option
  sed -i '' -e '/-Wno-absolute-value/d' \
    build/common.gypi \
    third_party/ffmpeg/ffmpeg.gyp
}

build() {
  cd "$srcdir/chromium-$pkgver"

  # pulling /usr/bin in front of /usr/local here to also be able test-compile
  # outside absd-build while gnu-binutils is installed...
  export PATH="$srcdir/python2-path:/usr/bin:$PATH"

  CFLAGS="${CFLAGS} -Wno-error -Wno-unknown-warning-option"

  # CFLAGS are passed through release_extra_cflags below
  export -n CFLAGS CXXFLAGS
  CFLAGS+=' -Wno-unused-local-typedefs'

  export CC=clang
  export CXX=clang++
  export CPP=clang-cpp

  local _chromium_conf=(
    -Dgoogle_api_key=$_google_api_key
    -Dgoogle_default_client_id=$_google_default_client_id
    -Dgoogle_default_client_secret=$_google_default_client_secret
    -Dwerror=
    -Dclang=1
    -Dclang_use_chrome_plugins=0
    -Dpython_ver=2.7
    -Dlinux_strip_binary=1
    -Dlinux_use_bundled_binutils=0
    -Dlinux_use_bundled_gold=0
    -Dlinux_use_gold_flags=0
    -Dlinux_use_heapchecker=0
    -Dlinux_breakpad=0
    -Dlogging_like_official_build=1
    -Drelease_extra_cflags="$CFLAGS"
    -Dlibspeechd_h_prefix=speech-dispatcher/
    -Dffmpeg_branding=Chrome
    -Dproprietary_codecs=1
    -Duse_system_bzip2=1
    -Duse_system_flac=1
    -Duse_system_ffmpeg=0
    -Duse_system_harfbuzz=1
    -Duse_system_libevent=1
    -Duse_system_libjpeg=1
    -Duse_system_libpng=1
    -Duse_system_libxml=1
    -Duse_system_snappy=1
    -Duse_system_ssl=0
    -Duse_system_xdg_utils=1
    -Duse_system_yasm=1
    -Duse_system_zlib=0
    -Dusb_ids_path=/usr/share/hwdata/usb.ids
    -Duse_mojo=0
    -Duse_gconf=0
    -Ddisable_fatal_linker_warnings=1
    -Ddisable_glibc=1
    -Ddisable_sse2=1
    -Duse_allocator=none
    -Ddisable_nacl=1
    -Denable_webrtc=1
    -Denable_openmax=1
    -Denable_one_click_signin=1
    -Dno_gc_sections=1
    -Dprefix_dir=/usr
    -Ddisable_pnacl=1
    -Duse_cups=1
    -Duse_pulseaudio=1
    -Duse_system_libusb=1
    -Duse_system_libvpx=0
    -Duse_system_icu=0
    -Duse_system_opus=0
  )
  # https://code.google.com/p/chromium/issues/detail?id=386097
  msg "Update strings"
  third_party/libaddressinput/chromium/tools/update-strings.py

  msg "Unbundle"
  build/linux/unbundle/replace_gyp_files.py "${_chromium_conf[@]}"

  msg "GYP configure"
  ##python2 build/gyp_chromium chrome/chrome.gyp --depth=. "${_chromium_conf[@]}"
  ##build/gyp_chromium -f make --depth=. "${_chromium_conf[@]}"
  build/gyp_chromium --depth=. "${_chromium_conf[@]}"

  #msg "Running make:"
  #gmake BUILDTYPE=Release GPERF=/usr/bin/gperf chrome
  msg "Ninja..."
  ninja -C out/Release chrome
    #chrome_sandbox chromedriver
}

package() {
  cd "$srcdir/chromium-$pkgver"

  install -dm755 "$pkgdir/usr/lib/chromium/"
  install out/Release/chrome "$pkgdir/usr/lib/chromium/chromium"

  cp out/Release/{*.pak,libffmpegsumo.so} \
    "$pkgdir/usr/lib/chromium/"

  # Allow users to override command-line options
  install -dm755 "$pkgdir/etc/chromium/"
  install -m644 "$srcdir/chromium.default" "$pkgdir/etc/chromium/default"

  cp -RP out/Release/locales "$pkgdir/usr/lib/chromium/"

  install -dm755 "$pkgdir/usr/share/man/man1/"
  install -m644 out/Release/chrome.1 "$pkgdir/usr/share/man/man1/chromium.1"

  install -dm755 "$pkgdir/usr/share/applications/"
  install -m644 "$srcdir/chromium.desktop" \
    "$pkgdir/usr/share/applications/chromium.desktop"

  for size in 22 24 48 64 128 256; do
    install -dm755 "$pkgdir/usr/share/icons/hicolor/${size}x${size}/apps/"
    install -m644 "chrome/app/theme/chromium/product_logo_$size.png" \
      "$pkgdir/usr/share/icons/hicolor/${size}x${size}/apps/chromium.png"
  done

  for size in 16 32; do
    install -dm755 "$pkgdir/usr/share/icons/hicolor/${size}x${size}/apps/"
    install -m644 "chrome/app/theme/default_100_percent/chromium/product_logo_$size.png" \
      "$pkgdir/usr/share/icons/hicolor/${size}x${size}/apps/chromium.png"
  done

  install -d "$pkgdir/usr/bin/"
  install    "$srcdir/chromium.sh" "$pkgdir/usr/bin/chromium"

  install -dm755 "$pkgdir/usr/share/licenses/chromium/"
  install -m644 LICENSE "$pkgdir/usr/share/licenses/chromium/LICENSE"
}

# vim:set ts=2 sw=2 et:
