GChecksumType is an enum...
JSValueToNumber returns a double...
now they check that with isnan, which on FreeBSD is a _Generic

Well... enums aren't floating point number so the check itself is bogus...

I could just remove the check altogether...

In the second hunk I was out of gaf...
Third chunk is a missing return value

--- a/src/scripts.c
+++ b/src/scripts.c
@@ -3070,11 +3070,11 @@
     GChecksumType type = G_CHECKSUM_SHA256;
     if (argc > 1) 
     {
-        type = JSValueToNumber(ctx, argv[1], exc);
-        if (isnan(type)) 
+        double typeval = JSValueToNumber(ctx, argv[1], exc);
+        if (isnan(typeval)) 
         {
             ret = NIL;
             goto error_out;
         }
-        type = MIN(MAX(type, G_CHECKSUM_MD5), G_CHECKSUM_SHA256);
+        type = MIN(MAX(typeval, G_CHECKSUM_MD5), G_CHECKSUM_SHA256);
     }
@@ -5884,8 +5884,8 @@
 static JSValueRef 
 gobject_disconnect(JSContextRef ctx, JSObjectRef function, JSObjectRef this, size_t argc, const JSValueRef argv[], JSValueRef* exc) 
 {
-    int id;
-    if (argc > 0 && JSValueIsNumber(ctx, argv[0]) && !isnan(id = JSValueToNumber(ctx, argv[0], exc)))
+    int id = JSValueToNumber(ctx, argv[0], exc);
+    if (argc > 0 && JSValueIsNumber(ctx, argv[0]))
     {
         GObject *o = JSObjectGetPrivate(this);
         if (o != NULL && g_signal_handler_is_connected(o, id)) 
@@ -6950,7 +6950,7 @@
 gboolean
 scripts_load_chrome(JSObjectRef wv, const char *uri)
 {
-    g_return_if_fail(uri != NULL);
+    g_return_val_if_fail(uri != NULL, false);
     gboolean ret = false;
 
     EXEC_LOCK;
