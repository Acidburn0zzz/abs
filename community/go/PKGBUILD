# $Id: PKGBUILD 92767 2013-06-14 21:32:00Z arodseth $
# Maintainer: Vesa Kaihlavirta <vegai@iki.fi>
# Maintainer: Alexander Rødseth <rodseth@gmail.com>
# Contributor: Rémy Oudompheng  <remy@archlinux.org>
# Contributor: Andres Perera <andres87p gmail>
# Contributor: Matthew Bauer <mjbauer95@gmail.com>
# Contributor: Christian Himpel <chressie@gmail.com>
# Contributor: Mike Rosset <mike.rosset@gmail.com>
# Contributor: Daniel YC Lin <dlin.tw@gmail.com>
# Contributor: Adam Jimerson <vendion@pacbsd.org>

pkgname=go
pkgver=1.5.2
pkgrel=1
pkgdesc='Compiler and tools for the Go programming language from Google'
arch=('i386' 'amd64')
url='http://golang.org/'
license=('BSD')
makedepends=('git' 'mercurial' 'go')
options=('!strip' 'staticlibs')
optdepends=('compat6x: for testdata'
            'git: for fetching sources from git repositories'
            'bzr: for fetching sources from bazzar repositories'
            'subversion: for fetching sources from subversion repositories'
            'mercurial: for fetching sources from mercurial repositories')
install="$pkgname.install"
source=("https://storage.googleapis.com/golang/${pkgname}${pkgver}.src.tar.gz")
sha256sums=('a889873e98d9a72ae396a9b7dd597c29dcd709cafa9097d9c4ba04cff0ec436b')

build() {
  cd "$srcdir/$pkgname/src"

  export GOROOT="$srcdir/$pkgname"
  export GOBIN="$GOROOT/bin"
  export GOPATH="$srcdir/"
  export GOROOT_FINAL="/usr/lib/go"
  export GOROOT_BOOTSTRAP="/usr/lib/go"

  # Go only supports amd64 under FreeBSD
  export GOOS='freebsd'
  export GOARCH='amd64'

  bash make.bash

  # To enable crosscompiling for different OSos and arcutecture uncomment this
  # and rebuild:
  #
  # # Crosscompilation for various platforms
  # for os in 'darwin' 'linux' 'windows'; do
  #   case "${os}" in
  #     'darwin')
  #       export GOOS="${os}"
  #       export GOARCH='amd64'
  #       bash make.bash --no-clean
  #       ;;
  #     'linux')
  #       export GOOS="${os}"
  #       for arch in 'amd64' '386' 'arm'; do
  #         export GOARCH="${arch}"
  #         bash make.bash --no-clean
  #       done
  #       ;;
  #     'windows')
  #       export GOOS="${os}"
  #       for arch in 'amd64' '386'; do
  #         export GOARCH="${arch}"
  #         bash make.bash --no-clean
  #       done
  #       ;;
  #   esac
  # done

  # Crosscompile resets
  GOOS='freebsd'
  GOARCH='amd64'

  ${GOBIN}/go get -d golang.org/x/tools/cmd/godoc
  ${GOBIN}/go build -o ${srcdir}/godoc golang.org/x/tools/cmd/godoc
  for tool in 'vet' 'cover' 'callgraph'; do
    ${GOBIN}/go get -d golang.org/x/tools/cmd/${tool}
    ${GOBIN}/go build -o ${GOROOT}/pkg/tool/${GOOS}_${GOARCH}/${tool} \
      golang.org/x/tools/cmd/${tool}
  done
}

check() {
  cd "$pkgname"

  export GOOS='freebsd'
  export GOARCH='amd64'

  export GOROOT="$srcdir/$pkgname"
  export GOBIN="$GOROOT/bin"
  export PATH="$srcdir/$pkgname/bin:$PATH"
  export GOROOT_BOOTSTRAP='/usr/lib/go'

  # TestSimpleMulticastListener will fail in standard chroot.
  cd src && bash run.bash --no-rebuild || true
}

package() {
  cd "$srcdir/$pkgname"

  export GOROOT="$srcdir/$pkgname"
  export GOBIN="$GOROOT/bin"
  export GOROOT_BOOTSTRAP='/usr/lib/go'

  install -dm755 "$pkgdir/usr/bin"

  install -dm755 "$pkgdir/usr/share/licenses/go"
  install -m644 LICENSE \
    "$pkgdir/usr/share/licenses/go/LICENSE"

  mkdir -p \
    "$pkgdir/"{etc/profile.d,usr/{share/go,lib/go,lib/go/src,lib/go/site/src}}

  cp -r "$srcdir/godoc" "$pkgdir/usr/bin/godoc"
  cp -r doc misc "$pkgdir/usr/share/go/"
  ln -s /usr/share/go/doc "$pkgdir/usr/lib/go/doc"
  cp -r bin "$pkgdir/usr"
  cp -r pkg "$pkgdir/usr/lib/go"
  cp -r "$GOROOT/src" "$pkgdir/usr/lib/go/"
  cp -r "$GOROOT/src/cmd" "$pkgdir/usr/lib/go/src/cmd"
  cp -r "$GOROOT/lib" "$pkgdir/usr/lib/go/"

  install -m644 src/Make.* "$pkgdir/usr/lib/go/src"

  # Remove object files from target src dir
  find "$pkgdir/usr/lib/go/src/" -type f -name '*.[ao]' -delete

  # Fix for FS#32813
  find "$pkgdir" -type f -name sql.go -exec chmod -x {} \;

  # Remove all executable source files
  find "$pkgdir/usr/lib/go/src" -type f -perm '++x' -delete

  # This is to make go get code.google.com/p/go-tour/gotour and
  # then running the gotour executable work out of the box.
  ln -sf /usr/bin "$pkgdir/usr/lib/go/bin"

  # For FS#42660 / FS#42661 / gox
  install -dm755 "$pkgdir/usr/lib/go/src"
  install -m755 src/make.bash "$pkgdir/usr/lib/go/src/make.bash"
  install -m755 src/run.bash "$pkgdir/usr/lib/go/src/run.bash"
  cp -r misc/ "$pkgdir/usr/lib/go/"

  # For godoc
  install -Dm755 "$srcdir/godoc" "$pkgdir/usr/bin/godoc"
  install -m644 favicon.ico "$pkgdir/usr/lib/go/favicon.ico"

  rm -f "$pkgdir/usr/share/go/doc/articles/wiki/get.bin"

  install -m644 VERSION "$pkgdir/usr/lib/go/VERSION"

  find "$pkgdir/usr/"{lib/go/pkg,bin} -type f -exec touch '{}' +
}

# vim:set ts=2 sw=2 et:
