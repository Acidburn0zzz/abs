# Maintainer: Adam Jimerson <vendion@pacbsd.org>

pkgname=('go' 'go-tools')
pkgver=1.6
pkgrel=1
arch=('amd64')
url='http://golang.org/'
license=('BSD')
makedepends=('git' 'go')
options=('!strip' 'staticlibs')
source=("https://storage.googleapis.com/golang/${pkgname}${pkgver}.src.tar.gz")
sha256sums=('a96cce8ce43a9bf9b2a4c7d470bc7ee0cb00410da815980681c8353218dcf146')
_gourl=golang.org/x/tools/cmd

build() {
  cd "$srcdir/$pkgname/src"

  export GOROOT="$srcdir/$pkgname"
  export GOBIN="$GOROOT/bin"
  export GOPATH="$srcdir/"
  export GOROOT_FINAL="/usr/lib/go"
  export GOROOT_BOOTSTRAP="/usr/lib/go"

  # Crosscompilation for various platforms, and their supported arcutectures.
  # This is not required as the compiler can generate libraries on the fly.
  # Prebuilding the libs speeds up crosscompilation time.
  #
  # for os in 'darwin' 'linux' 'windows'; do
  #   case "${os}" in
  #     'darwin')
  #       export GOOS="${os}"
  #       export GOARCH='amd64'
  #       bash make.bash --no-clean
  #       ;;
  #     'linux')
  #       export GOOS="${os}"
  #       for arch in 'amd64' '386' 'arm'; do
  #         export GOARCH="${arch}"
  #         bash make.bash --no-clean
  #       done
  #       ;;
  #     'windows')
  #       export GOOS="${os}"
  #       for arch in 'amd64' '386'; do
  #         export GOARCH="${arch}"
  #         bash make.bash --no-clean
  #       done
  #       ;;
  #   esac
  # done

  # Crosscompile resets
  GOOS='freebsd'
  GOARCH="${CARCH}"

  # Go only supports amd64 under FreeBSD
  export GOOS='freebsd'
  export GOARCH="${CARCH}"
  bash make.bash --no-clean

  # System-wide tools
  for tool in 'godex' 'godoc' 'goimports' 'gomvpkg' 'gorename' 'gotype'; do
    ${GOROOT}/bin/go get -d "golang.org/x/tools/cmd/${tool}"
    ${GOROOT}/bin/go build -v -x -o "${GOPATH}/bin/${tool}" "${_gourl}/${tool}"
  done

  # Distribution tools
  for tool in 'benchcmp' 'bundle' 'callgraph' 'digraph' 'eg' 'fiximports' \
    'html2article' 'oracle' 'present' 'ssadump' 'stress' 'stringer'; do
    ${GOROOT}/bin/go get -d "golang.org/x/tools/cmd/${tool}"
    ${GOROOT}/bin/go build -v -x -o "${GOPATH}/pkg/tool/${GOOS}_${GOARCH}/${tool}" "golang.org/x/tools/cmd/${tool}"
  done
}

check() {
  cd "$pkgname"

  export GOOS='freebsd'
  export GOARCH="${CARCH}"

  export GOROOT="$srcdir/$pkgname"
  export GOBIN="$GOROOT/bin"
  export PATH="$srcdir/$pkgname/bin:$PATH"
  export GOROOT_BOOTSTRAP='/usr/lib/go'

  # bundle does not compile with 1.6
  # godoc test fails with 1.6
  for tool in 'goimports' 'gomvpkg' 'gorename' 'gotype' 'benchcmp' \
    'callgraph' 'digraph' 'eg' 'fiximports' 'html2article' 'oracle' 'present' \
    'ssadump' 'stress' 'stringer'; do
    GOPATH="${srcdir}" ${GOROOT}/bin/go test -v -x ${_gourl}/${tool}
  done

  # TestSimpleMulticastListener will fail in standard chroot.
  cd src && bash run.bash --no-rebuild || true
}

package_go() {
  pkgdesc='Compiler and tools for the Go programming language from Google'
  optdepends=('compat6x: for testdata'
              'git: for fetching sources from git repositories'
              'bzr: for fetching sources from bazzar repositories'
              'subversion: for fetching sources from subversion repositories'
              'mercurial: for fetching sources from mercurial repositories')
  install="${pkgname}.install"

  cd "${srcdir}/${pkgname}"

  export GOROOT="${srcdir}/${pkgname}"
  export GOBIN="${GOROOT}/bin"
  export PATH="${srcdir}/${pkgname}/bin:${PATH}"
  export GOOS='freebsd'
  export GOARCH="${CARCH}"
  export GOROOT_BOOTSTRAP='/usr/lib/go'

  install -dm644 "${pkgdir}/usr/share/licenses/${pkgname}"
  install -Dm644 'LICENSE' "${pkgdir}/usr/share/licenses/${pkgname}/LICENSE"

  mkdir -p "${pkgdir}/usr/"{share/go,lib/go,lib/go/pkg,lib/go/src,lib/go/site/src}

  cp -r 'doc' "${pkgdir}/usr/share/go"
  cp -r 'misc' "${pkgdir}/usr/share/go"
  ln -s '/usr/share/go/doc' "${pkgdir}/usr/lib/go/doc"
  cp -r 'bin' "${pkgdir}/usr"
  cp -r 'pkg/'{include,freebsd_${GOARCH},tool} "${pkgdir}/usr/lib/go/pkg"
  # The 'race' folder is not always generated for all architectures.
  [ -d "pkg/freebsd_${GOARCH}_race"  ] && cp -r "pkg/freebsd_${GOARCH}_race" "${pkgdir}/usr/lib/go/pkg"
  cp -r "${GOROOT}/src" "${pkgdir}/usr/lib/go/"
  cp -r "${GOROOT}/lib" "${pkgdir}/usr/lib/go/"

  # This is to make `# go get golang.org/x/tour/gotour` and then running the
  # gotour executable work out of the box.
  ln -sf /usr/bin "${pkgdir}/usr/lib/go/bin"

  install -Dm644 VERSION "${pkgdir}/usr/lib/go/VERSION"

  # For godoc
  install -Dm644 favicon.ico "${pkgdir}/usr/lib/go/favicon.ico"

  # Clean Windows specific files.
  rm -fv "${pkgdir}"/usr/lib/go/src/*.bat

  # Strip manually since `strip` will not process Go's static
  # libraries.
  for i in "${pkgdir}/usr/bin"/* \
            "${pkgdir}/usr/lib/go/pkg/tool/freebsd_${GOARCH}"/*; do
    strip -s "${i}"
  done
}

package_go-tools() {
  pkgdesc='Extra developer tools for the Go programming language'
  depends=('go>2:1.5.3-1')

  export GOOS='freebsd'
  export GOARCH="${CARCH}"

  install -dm644 "${pkgdir}/usr/share/licenses/${pkgname}"
  install -Dm644 "${srcdir}/src/${_gourl}/../LICENSE" "${pkgdir}/usr/share/licenses/${pkgname}/LICENSE"

  # System-wide tools
  install -dm755 "${pkgdir}/usr/bin"
  install -p -m755 "${srcdir}/bin"/* "${pkgdir}/usr/bin"

  # Distribution tools
  install -dm755 "${pkgdir}/usr/lib/go/pkg/tool/${GOOS}_${GOARCH}"
  install -p -m755 "${srcdir}/pkg/tool/${GOOS}_${GOARCH}"/* "${pkgdir}/usr/lib/go/pkg/tool/${GOOS}_${GOARCH}"

  for i in "${pkgdir}/usr/bin"/* \
           "${pkgdir}/usr/lib/go/pkg/tool/freebsd_${GOARCH}"/*; do
    strip -s "${i}"
  done
}

# vim:set ts=2 sw=2 et:
